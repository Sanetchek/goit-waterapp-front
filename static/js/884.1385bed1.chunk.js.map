{"version":3,"file":"static/js/884.1385bed1.chunk.js","mappings":"0MAEO,MAAMA,EAAyBC,EAAAA,KAAaC,MAAM,CACvDC,KAAMF,EAAAA,KAEHG,SAAS,2BACTC,IAAI,EAAG,4CACPC,IAAI,GAAI,8CACXC,MAAON,EAAAA,KAEJG,SAAS,oCACTI,QAAQ,uBAAwB,uCAChCD,MAAM,kBACTE,OAAQR,EAAAA,KAELS,MAAM,CAAC,QAAS,MAAO,IAAK,2CAC/BC,SAAUV,EAAAA,KAEPI,IAAI,EAAG,kDACPC,IAAI,GAAI,wDACXM,YAAaX,EAAAA,KAEVI,IAAI,EAAG,iDACPC,IAAI,GAAI,wDACXO,kBAAmBZ,EAAAA,KAEhBI,IAAI,EAAG,iDACPC,IAAI,GAAI,wDACRI,MAAM,CAACT,EAAAA,GAAQ,eAAgB,MAAO,2B,wBC3B3C,SAAgB,cAAgB,wCAAwC,WAAa,qCAAqC,YAAc,sCAAsC,aAAe,uCAAuC,MAAQ,gCAAgC,OAAS,iCAAiC,WAAa,qCAAqC,WAAa,qCAAqC,KAAO,+BAA+B,WAAa,qCAAqC,mBAAqB,6CAA6C,aAAe,uCAAuC,gBAAkB,0CAA0C,cAAgB,wCAAwC,eAAiB,yCAAyC,UAAY,oCAAoC,MAAQ,gCAAgC,WAAa,qCAAqC,cAAgB,wCAAwC,YAAc,sCAAsC,OAAS,iCAAiC,MAAQ,gCAAgC,kBAAoB,4CAA4C,MAAQ,gCAAgC,aAAe,uCAAuC,aAAe,uCAAuC,cAAgB,wCAAwC,mBAAqB,6CAA6C,WAAa,qCAAqC,YAAc,sCAAsC,SAAW,mCAAmC,gBAAkB,0CAA0C,YAAc,sCAAsC,aAAe,uCAAuC,gBAAkB,0CAA0C,aAAe,uCAAuC,gBAAkB,0CAA0C,aAAe,wC,iCCSr6D,MAoTA,EApTyBa,IAAkB,IAAjB,QAAEC,GAASD,EACnC,MAAME,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,KAAe,CAAC,GAC1C,IAAEC,EAAG,KAAElB,EAAI,MAAEI,EAAK,OAAEE,EAAM,OAAEa,GAAWJ,EAEvCK,GAAeC,EAAAA,EAAAA,QAAO,OACrBC,EAASC,IAAcC,EAAAA,EAAAA,UAASL,GAAU,OAC1CM,EAAcC,IAAmBF,EAAAA,EAAAA,WAAS,IAC1CG,EAAiBC,IAAsBJ,EAAAA,EAAAA,WAAS,IAChDK,EAAoBC,IAAyBN,EAAAA,EAAAA,WAAS,IAM7DO,EAAAA,EAAAA,YAAU,KAENR,EADEJ,GAGS,KACb,GACC,CAACA,IAEJ,MAAMa,GAAeC,EAAAA,EAAAA,cACnBC,UACE,MAAMC,EAAiBC,EAAMC,OAAOC,MAAM,GAE1C,GAAIH,EAAgB,CAClB,MAAMI,EAAYC,IAAIC,gBAAgBN,GACtCZ,EAAWgB,GAEX,UACQ1B,GACJ6B,EAAAA,EAAAA,IAAa,CAAEC,OAAQzB,EAAK0B,WAAYT,KAE1CU,EAAAA,GAAMC,QAAQ,+BAChB,CAAE,MAAOC,GACPF,EAAAA,GAAME,MAAM,4CACZC,QAAQD,MAAM,uBAAwBA,EACxC,CACF,IAEF,CAAClC,EAAUK,IAGP+B,EAAef,UACnB,IACE,MAAMgB,EAAiBC,OAAOC,YAC5BD,OAAOE,QAAQC,GAAQC,QACrBC,IAAA,IAAEC,EAAKC,GAAMF,EAAA,MACD,KAAVE,IAAiB,CAAC,SAAU,kBAAkBC,SAASF,EAAI,WAI3D5C,GAAS+C,EAAAA,EAAAA,IAAW,CAAEjB,OAAQzB,EAAK2C,SAAUX,KACnDL,EAAAA,GAAMC,QAAQ,8BA5CGZ,iBACbrB,GAASiD,EAAAA,EAAAA,IAAQ5C,GAAK,EA4C1B6C,GACAnD,GACF,CAAE,MAAOmC,GACPF,EAAAA,GAAME,MAAM,0CACZC,QAAQD,MAAM,oBAAqBA,EACrC,GAGIiB,EAA2BC,GAAU,KACzCA,GAAOC,IAASA,GAAK,EAGjBC,EAAcnE,EAAOA,EAAKoE,OAAO,GAAGC,cAAgB,GAEpDC,EAAgB,CACpBtE,KAAMA,GAAQ,GACdI,MAAOA,GAAS,GAChBE,OAAQA,GAAU,QAClBiE,YAAa,GACb/D,SAAU,GACVgE,eAAgB,IAGlB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLJ,cAAeA,EACfK,iBAAkB9E,EAClB+E,SAAUA,CAACtB,EAAQuB,KACjB5B,EAAaK,GACbuB,EAAQC,eAAc,EAAM,EAC5BC,SAEDC,IAAA,IAAC,cAAEC,EAAa,aAAEC,GAAcF,EAAA,OAC/BP,EAAAA,EAAAA,KAAAU,EAAAA,SAAA,CAAAJ,UACEK,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAN,SAAA,EACHK,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAIC,gBAAgBT,SAAA,EAClCK,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAIE,YAAYV,SAAA,EAC9BN,EAAAA,EAAAA,KAAA,KAAGa,UAAWC,EAAIG,WAAWX,SAAC,gBAC9BK,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAII,aAAaZ,SAAA,EAC/BN,EAAAA,EAAAA,KAAA,OAAKa,UAAWC,EAAIK,eAAeb,SAChCzD,GACCmD,EAAAA,EAAAA,KAAA,OACEa,UAAWC,EAAIM,MACfC,IAAKxE,EACLyE,QAAQ,OACRC,IAAI,cACJC,MAAM,KACNC,OAAO,QAGTzB,EAAAA,EAAAA,KAAA,OAAKa,UAAWC,EAAIY,YAAYpB,SAAEZ,OAGtCiB,EAAAA,EAAAA,MAAA,SAAOE,UAAWC,EAAIa,OAAOrB,SAAA,EAC3BN,EAAAA,EAAAA,KAAA,SACEa,UAAWC,EAAIc,WACfC,KAAK,OACLC,OAAO,UACPC,SAAUpE,IACRJ,EAAaI,GACb6C,EAAc,SAAU7C,EAAMqE,cAAcnE,MAAM,GAAG,EAEvDoE,IAAKtF,KAEPqD,EAAAA,EAAAA,KAAA,OAAKa,UAAWC,EAAIoB,WAAYV,MAAM,KAAKC,OAAO,KAAInB,UACpDN,EAAAA,EAAAA,KAAA,OAAKmC,UAAW,GAAGC,EAAAA,qBAErBpC,EAAAA,EAAAA,KAAA,KAAGa,UAAWC,EAAIuB,KAAK/B,SAAC,0BAI5BK,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAIwB,YAAYhC,SAAA,EAC9BK,EAAAA,EAAAA,MAAA,OAAAL,SAAA,EACEN,EAAAA,EAAAA,KAAA,MAAIa,UAAWC,EAAIyB,WAAWjC,SAAC,0BAC/BK,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAI0B,mBAAmBlC,SAAA,EACrCK,EAAAA,EAAAA,MAAA,SAAOE,UAAW,GAAGC,EAAI2B,gBAAgB3B,EAAIuB,OAAO/B,SAAA,EAClDN,EAAAA,EAAAA,KAAC0C,EAAAA,GAAK,CACJb,KAAK,QACLtG,KAAK,SACL0D,MAAM,QACN4B,UAAWC,EAAI6B,cACf,YAIJhC,EAAAA,EAAAA,MAAA,SAAOE,UAAW,GAAGC,EAAI2B,gBAAgB3B,EAAIuB,OAAO/B,SAAA,EAClDN,EAAAA,EAAAA,KAAC0C,EAAAA,GAAK,CACJb,KAAK,QACLtG,KAAK,SACL0D,MAAM,MACN4B,UAAWC,EAAI6B,cACf,aAIN3C,EAAAA,EAAAA,KAAC4C,EAAAA,GAAY,CACXrH,KAAK,SACLsH,UAAU,IACVhC,UAAWC,EAAIxC,YAInB0B,EAAAA,EAAAA,KAAA,OAAKa,UAAWC,EAAIgC,gBAAgBxC,UAClCN,EAAAA,EAAAA,KAAA,OAAKa,UAAWC,EAAIiC,aAAazC,UAC/BK,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAIkC,gBAAgB1C,SAAA,EAClCK,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAImC,cAAc3C,SAAA,EAChCN,EAAAA,EAAAA,KAAA,SAAOa,UAAWC,EAAIoC,eAAgBC,QAAQ,OAAM7C,SAAC,eAGrDN,EAAAA,EAAAA,KAAC0C,EAAAA,GAAK,CACJb,KAAK,OACLtG,KAAK,OACL6H,GAAG,OACHvC,UAAW,GAAGC,EAAIuC,aAAavC,EAAIwC,gBAAgBxC,EAAIuB,UAEzDrC,EAAAA,EAAAA,KAAC4C,EAAAA,GAAY,CACXrH,KAAK,OACLsH,UAAU,IACVhC,UAAWC,EAAIxC,YAInBqC,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAImC,cAAc3C,SAAA,EAChCN,EAAAA,EAAAA,KAAA,SAAOa,UAAWC,EAAIoC,eAAgBC,QAAQ,QAAO7C,SAAC,WAGtDN,EAAAA,EAAAA,KAAC0C,EAAAA,GAAK,CACJb,KAAK,OACLtG,KAAK,QACL6H,GAAG,QACHvC,UAAW,GAAGC,EAAIuC,aAAavC,EAAIwC,gBAAgBxC,EAAIuB,UAEzDrC,EAAAA,EAAAA,KAAC4C,EAAAA,GAAY,CACXrH,KAAK,QACLsH,UAAU,IACVhC,UAAWC,EAAIxC,yBAS7BqC,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAIyC,gBAAgBjD,SAAA,EAClCN,EAAAA,EAAAA,KAAA,MAAIa,UAAWC,EAAI0C,cAAclD,SAAC,cAElCK,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAI2C,kBAAkBnD,SAAA,EACpCN,EAAAA,EAAAA,KAAA,SAAOa,UAAWC,EAAI4C,MAAMpD,SAAC,wBAC7BK,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAI6C,aAAarD,SAAA,EAC/BN,EAAAA,EAAAA,KAAC0C,EAAAA,GAAK,CACJb,KAAM7E,EAAe,OAAS,WAC9BzB,KAAK,cACLsF,UAAW,GAAGC,EAAI8C,QAClBlC,YAAY,cAEd1B,EAAAA,EAAAA,KAAA,OACEa,UAAWC,EAAI+C,mBACfC,QAASvE,EAAyBtC,GAClCuE,MAAM,OACNC,OAAO,OAAMnB,UAEbN,EAAAA,EAAAA,KAAA,OACEmC,UAAW,GAAGC,EAAAA,KACZpF,EAAe,WAAa,2BAKpCgD,EAAAA,EAAAA,KAAC4C,EAAAA,GAAY,CACXrH,KAAK,cACLsH,UAAU,IACVhC,UAAWC,EAAIiD,mBAInBpD,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAI2C,kBAAkBnD,SAAA,EACpCN,EAAAA,EAAAA,KAAA,SAAOa,UAAWC,EAAI4C,MAAMpD,SAAC,mBAC7BK,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAI6C,aAAarD,SAAA,EAC/BN,EAAAA,EAAAA,KAAC0C,EAAAA,GAAK,CACJb,KAAM3E,EAAkB,OAAS,WACjC3B,KAAK,WACLsF,UAAW,GAAGC,EAAI8C,QAClBlC,YAAY,cAEd1B,EAAAA,EAAAA,KAAA,OACEa,UAAWC,EAAI+C,mBACfC,QAASvE,EAAyBpC,GAClCqE,MAAM,OACNC,OAAO,OAAMnB,UAEbN,EAAAA,EAAAA,KAAA,OACEmC,UAAW,GAAGC,EAAAA,KACZlF,EAAkB,WAAa,2BAKvC8C,EAAAA,EAAAA,KAAC4C,EAAAA,GAAY,CACXrH,KAAK,WACLsH,UAAU,IACVhC,UAAWC,EAAIiD,mBAInBpD,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAI2C,kBAAkBnD,SAAA,EACpCN,EAAAA,EAAAA,KAAA,SAAOa,UAAWC,EAAI4C,MAAMpD,SAAC,0BAC7BK,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAI6C,aAAarD,SAAA,EAC/BN,EAAAA,EAAAA,KAAC0C,EAAAA,GAAK,CACJb,KAAMzE,EAAqB,OAAS,WACpC7B,KAAK,iBACLsF,UAAW,GAAGC,EAAI8C,QAClBlC,YAAY,cAEd1B,EAAAA,EAAAA,KAAA,OACEa,UAAWC,EAAI+C,mBACfC,QAASvE,EAAyBlC,GAClCmE,MAAM,OACNC,OAAO,OAAMnB,UAEbN,EAAAA,EAAAA,KAAA,OACEmC,UAAW,GAAGC,EAAAA,KACZhF,EAAqB,WAAa,2BAK1C4C,EAAAA,EAAAA,KAAC4C,EAAAA,GAAY,CACXrH,KAAK,iBACLsH,UAAU,IACVhC,UAAWC,EAAIiD,yBAMvB/D,EAAAA,EAAAA,KAAA,OAAKa,UAAWC,EAAIkD,cAAc1D,UAChCN,EAAAA,EAAAA,KAAA,UACE6B,KAAK,SACLhB,UAAW,gBAAgBC,EAAImD,SAC/BC,SAAUzD,EAAaH,SACxB,eAKJ,GAEE,C","sources":["components/UserSettingsForm/UserSettingsFormSchema.js","webpack://react-homework-template/./src/components/UserSettingsForm/UserSettingsForm.module.css?3f7a","components/UserSettingsForm/UserSettingsForm.jsx"],"sourcesContent":["import * as yup from 'yup';\n\nexport const userSettingsFormSchema = yup.object().shape({\n  name: yup\n    .string()\n    .required('Please enter your name!')\n    .min(2, 'Name must be at least 2 characters long.')\n    .max(20, 'Name must be less than 20 characters long.'),\n  email: yup\n    .string()\n    .required('Please enter your email address.')\n    .matches(/^[^@]+@[^@]+\\.[^@]+$/, 'Please enter a valid email address.')\n    .email('Invalid email.'),\n  gender: yup\n    .string()\n    .oneOf(['woman', 'man', ''], 'Gender must be either \"woman\" or \"man\".'),\n  password: yup\n    .string()\n    .min(8, 'The passsword must contain at least 4 symbols!')\n    .max(64, 'The password must contain no more than 8 characters!'),\n  newPassword: yup\n    .string()\n    .min(8, 'The password must contain at least 4 symbols!')\n    .max(64, 'The password must contain no more than 8 characters!'),\n  newPasswordRepeat: yup\n    .string()\n    .min(8, 'The password must contain at least 4 symbols!')\n    .max(64, 'The password must contain no more than 8 characters!')\n    .oneOf([yup.ref('newPassword'), null], 'Passwords must match!'),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"passwordTitle\":\"UserSettingsForm_passwordTitle__dSurm\",\"imageTitle\":\"UserSettingsForm_imageTitle__MD5jd\",\"formWrapper\":\"UserSettingsForm_formWrapper__ujyOt\",\"imageWrapper\":\"UserSettingsForm_imageWrapper__U8Q4Q\",\"image\":\"UserSettingsForm_image__+uTGC\",\"upload\":\"UserSettingsForm_upload__t9HPd\",\"imageInput\":\"UserSettingsForm_imageInput__jEiRz\",\"uploadIcon\":\"UserSettingsForm_uploadIcon__0dJZK\",\"text\":\"UserSettingsForm_text__EFO7E\",\"inputTitle\":\"UserSettingsForm_inputTitle__ESP2R\",\"genderInputWrapper\":\"UserSettingsForm_genderInputWrapper__sP33D\",\"genderButton\":\"UserSettingsForm_genderButton__Z0gIT\",\"userInroWrapper\":\"UserSettingsForm_userInroWrapper__RJtcK\",\"userInputWrap\":\"UserSettingsForm_userInputWrap__dhGBC\",\"userInputTitle\":\"UserSettingsForm_userInputTitle__stZDh\",\"userInput\":\"UserSettingsForm_userInput__0SRz+\",\"error\":\"UserSettingsForm_error__1O6VL\",\"accentText\":\"UserSettingsForm_accentText__7Kn5v\",\"iconImportant\":\"UserSettingsForm_iconImportant__OOWTR\",\"accentTextL\":\"UserSettingsForm_accentTextL__rS9Gm\",\"header\":\"UserSettingsForm_header__nswTc\",\"label\":\"UserSettingsForm_label__DuSbd\",\"formGroupPassword\":\"UserSettingsForm_formGroupPassword__yDKPK\",\"input\":\"UserSettingsForm_input__7fym4\",\"errorMessage\":\"UserSettingsForm_errorMessage__NPkUw\",\"inputWrapper\":\"UserSettingsForm_inputWrapper__mv+is\",\"buttonWrapper\":\"UserSettingsForm_buttonWrapper__gGKFi\",\"passwordToggleIcon\":\"UserSettingsForm_passwordToggleIcon__lk76R\",\"btnWrapper\":\"UserSettingsForm_btnWrapper__eG2bt\",\"placeholder\":\"UserSettingsForm_placeholder__qf4U-\",\"flexWrap\":\"UserSettingsForm_flexWrap__RvIfu\",\"settingsWrapper\":\"UserSettingsForm_settingsWrapper__cqFYn\",\"userWrapper\":\"UserSettingsForm_userWrapper__Bkg+5\",\"userSettings\":\"UserSettingsForm_userSettings__-yspq\",\"formFlexWrapper\":\"UserSettingsForm_formFlexWrapper__xqYgJ\",\"formFlexItem\":\"UserSettingsForm_formFlexItem__mnUxu\",\"passwordWrapper\":\"UserSettingsForm_passwordWrapper__ltSFO\",\"cancelButton\":\"UserSettingsForm_cancelButton__nvpjo\"};","import { useEffect, useRef, useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { userSettingsFormSchema } from './UserSettingsFormSchema';\nimport { toast } from 'react-hot-toast';\nimport { selectUser } from '../../redux/auth/selectors';\nimport css from './UserSettingsForm.module.css';\nimport svg from '../../assets/images/snippets.svg';\nimport { updateUser, updateAvatar, getUser } from '../../redux/auth/operations';\n\nconst UserSettingsForm = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const currentUser = useSelector(selectUser) || {};\n  const { _id, name, email, gender, avatar } = currentUser;\n\n  const fileInputRef = useRef(null);\n  const [preview, setPreview] = useState(avatar || null);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showNewPassword, setShowNewPassword] = useState(false);\n  const [showRepeatPassword, setShowRepeatPassword] = useState(false);\n\n  const updateHeader = async () => {\n    await dispatch(getUser(_id));\n  };\n\n  useEffect(() => {\n    if (avatar) {\n      setPreview(avatar);\n    } else {\n      setPreview(null);\n    }\n  }, [avatar]);\n\n  const onFileChange = useCallback(\n    async event => {\n      const selectedAvatar = event.target.files[0];\n\n      if (selectedAvatar) {\n        const objectURL = URL.createObjectURL(selectedAvatar);\n        setPreview(objectURL);\n\n        try {\n          await dispatch(\n            updateAvatar({ userId: _id, avatarFile: selectedAvatar })\n          );\n          toast.success('Avatar updated successfully!');\n        } catch (error) {\n          toast.error('Error updating avatar. Please try again.');\n          console.error('Avatar update error:', error);\n        }\n      }\n    },\n    [dispatch, _id]\n  );\n\n  const handleSubmit = async values => {\n    try {\n      const filteredValues = Object.fromEntries(\n        Object.entries(values).filter(\n          ([key, value]) =>\n            value !== '' && !['avatar', 'repeatPassword'].includes(key)\n        )\n      );\n\n      await dispatch(updateUser({ userId: _id, userData: filteredValues }));\n      toast.success('User updated successfully!');\n      updateHeader();\n      onClose();\n    } catch (error) {\n      toast.error('Error updating user. Please try again.');\n      console.error('Submission error:', error);\n    }\n  };\n\n  const togglePasswordVisibility = setter => () => {\n    setter(prev => !prev);\n  };\n\n  const firstLetter = name ? name.charAt(0).toUpperCase() : '';\n\n  const initialValues = {\n    name: name || '',\n    email: email || '',\n    gender: gender || 'woman',\n    oldPassword: '',\n    password: '',\n    repeatPassword: '',\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={userSettingsFormSchema}\n      onSubmit={(values, actions) => {\n        handleSubmit(values);\n        actions.setSubmitting(false);\n      }}\n    >\n      {({ setFieldValue, isSubmitting }) => (\n        <>\n          <Form>\n            <div className={css.settingsWrapper}>\n              <div className={css.userWrapper}>\n                <p className={css.imageTitle}>Your Photo</p>\n                <div className={css.imageWrapper}>\n                  <div className={css.imageContainer}>\n                    {preview ? (\n                      <img\n                        className={css.image}\n                        src={preview}\n                        loading=\"lazy\"\n                        alt=\"User avatar\"\n                        width=\"75\"\n                        height=\"75\"\n                      />\n                    ) : (\n                      <div className={css.placeholder}>{firstLetter}</div>\n                    )}\n                  </div>\n                  <label className={css.upload}>\n                    <input\n                      className={css.imageInput}\n                      type=\"file\"\n                      accept=\"image/*\"\n                      onChange={event => {\n                        onFileChange(event);\n                        setFieldValue('avatar', event.currentTarget.files[0]);\n                      }}\n                      ref={fileInputRef}\n                    />\n                    <svg className={css.uploadIcon} width=\"18\" height=\"18\">\n                      <use xlinkHref={`${svg}#icon-upload`}></use>\n                    </svg>\n                    <p className={css.text}>Upload a photo</p>\n                  </label>\n                </div>\n\n                <div className={css.formWrapper}>\n                  <div>\n                    <h2 className={css.inputTitle}>Your gender identity</h2>\n                    <div className={css.genderInputWrapper}>\n                      <label className={`${css.genderButton} ${css.text}`}>\n                        <Field\n                          type=\"radio\"\n                          name=\"gender\"\n                          value=\"woman\"\n                          className={css.genderInput}\n                        />\n                        Woman\n                      </label>\n\n                      <label className={`${css.genderButton} ${css.text}`}>\n                        <Field\n                          type=\"radio\"\n                          name=\"gender\"\n                          value=\"man\"\n                          className={css.genderInput}\n                        />\n                        Man\n                      </label>\n                    </div>\n                    <ErrorMessage\n                      name=\"gender\"\n                      component=\"p\"\n                      className={css.error}\n                    />\n                  </div>\n\n                  <div className={css.formFlexWrapper}>\n                    <div className={css.formFlexItem}>\n                      <div className={css.userInfoWrapper}>\n                        <div className={css.userInputWrap}>\n                          <label className={css.userInputTitle} htmlFor=\"name\">\n                            Your name\n                          </label>\n                          <Field\n                            type=\"text\"\n                            name=\"name\"\n                            id=\"name\"\n                            className={`${css.userInput} ${css.userSettings} ${css.text}`}\n                          />\n                          <ErrorMessage\n                            name=\"name\"\n                            component=\"p\"\n                            className={css.error}\n                          />\n                        </div>\n\n                        <div className={css.userInputWrap}>\n                          <label className={css.userInputTitle} htmlFor=\"email\">\n                            Email\n                          </label>\n                          <Field\n                            type=\"text\"\n                            name=\"email\"\n                            id=\"email\"\n                            className={`${css.userInput} ${css.userSettings} ${css.text}`}\n                          />\n                          <ErrorMessage\n                            name=\"email\"\n                            component=\"p\"\n                            className={css.error}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className={css.passwordWrapper}>\n                <h2 className={css.passwordTitle}>Password</h2>\n\n                <div className={css.formGroupPassword}>\n                  <label className={css.label}>Outdated password:</label>\n                  <div className={css.inputWrapper}>\n                    <Field\n                      type={showPassword ? 'text' : 'password'}\n                      name=\"oldPassword\"\n                      className={`${css.input}`}\n                      placeholder=\"Password\"\n                    />\n                    <svg\n                      className={css.passwordToggleIcon}\n                      onClick={togglePasswordVisibility(setShowPassword)}\n                      width=\"20px\"\n                      height=\"20px\"\n                    >\n                      <use\n                        xlinkHref={`${svg}#${\n                          showPassword ? 'icon-eye' : 'icon-eye-slash'\n                        }`}\n                      />\n                    </svg>\n                  </div>\n                  <ErrorMessage\n                    name=\"oldPassword\"\n                    component=\"p\"\n                    className={css.errorMessage}\n                  />\n                </div>\n\n                <div className={css.formGroupPassword}>\n                  <label className={css.label}>New Password:</label>\n                  <div className={css.inputWrapper}>\n                    <Field\n                      type={showNewPassword ? 'text' : 'password'}\n                      name=\"password\"\n                      className={`${css.input}`}\n                      placeholder=\"Password\"\n                    />\n                    <svg\n                      className={css.passwordToggleIcon}\n                      onClick={togglePasswordVisibility(setShowNewPassword)}\n                      width=\"20px\"\n                      height=\"20px\"\n                    >\n                      <use\n                        xlinkHref={`${svg}#${\n                          showNewPassword ? 'icon-eye' : 'icon-eye-slash'\n                        }`}\n                      />\n                    </svg>\n                  </div>\n                  <ErrorMessage\n                    name=\"password\"\n                    component=\"p\"\n                    className={css.errorMessage}\n                  />\n                </div>\n\n                <div className={css.formGroupPassword}>\n                  <label className={css.label}>Repeat new password:</label>\n                  <div className={css.inputWrapper}>\n                    <Field\n                      type={showRepeatPassword ? 'text' : 'password'}\n                      name=\"repeatPassword\"\n                      className={`${css.input}`}\n                      placeholder=\"Password\"\n                    />\n                    <svg\n                      className={css.passwordToggleIcon}\n                      onClick={togglePasswordVisibility(setShowRepeatPassword)}\n                      width=\"20px\"\n                      height=\"20px\"\n                    >\n                      <use\n                        xlinkHref={`${svg}#${\n                          showRepeatPassword ? 'icon-eye' : 'icon-eye-slash'\n                        }`}\n                      />\n                    </svg>\n                  </div>\n                  <ErrorMessage\n                    name=\"repeatPassword\"\n                    component=\"p\"\n                    className={css.errorMessage}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className={css.buttonWrapper}>\n              <button\n                type=\"submit\"\n                className={`btn btn-blue ${css.button}`}\n                disabled={isSubmitting}\n              >\n                Save\n              </button>\n            </div>\n          </Form>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default UserSettingsForm;\n"],"names":["userSettingsFormSchema","yup","shape","name","required","min","max","email","matches","gender","oneOf","password","newPassword","newPasswordRepeat","_ref","onClose","dispatch","useDispatch","currentUser","useSelector","selectUser","_id","avatar","fileInputRef","useRef","preview","setPreview","useState","showPassword","setShowPassword","showNewPassword","setShowNewPassword","showRepeatPassword","setShowRepeatPassword","useEffect","onFileChange","useCallback","async","selectedAvatar","event","target","files","objectURL","URL","createObjectURL","updateAvatar","userId","avatarFile","toast","success","error","console","handleSubmit","filteredValues","Object","fromEntries","entries","values","filter","_ref2","key","value","includes","updateUser","userData","getUser","updateHeader","togglePasswordVisibility","setter","prev","firstLetter","charAt","toUpperCase","initialValues","oldPassword","repeatPassword","_jsx","Formik","validationSchema","onSubmit","actions","setSubmitting","children","_ref3","setFieldValue","isSubmitting","_Fragment","_jsxs","Form","className","css","settingsWrapper","userWrapper","imageTitle","imageWrapper","imageContainer","image","src","loading","alt","width","height","placeholder","upload","imageInput","type","accept","onChange","currentTarget","ref","uploadIcon","xlinkHref","svg","text","formWrapper","inputTitle","genderInputWrapper","genderButton","Field","genderInput","ErrorMessage","component","formFlexWrapper","formFlexItem","userInfoWrapper","userInputWrap","userInputTitle","htmlFor","id","userInput","userSettings","passwordWrapper","passwordTitle","formGroupPassword","label","inputWrapper","input","passwordToggleIcon","onClick","errorMessage","buttonWrapper","button","disabled"],"sourceRoot":""}