{"version":3,"file":"static/js/722.26b5188e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/AuthContainer/AuthContainer.module.css?4fa7","components/AuthContainer/AuthContainer.jsx","webpack://react-homework-template/./src/pages/SignupPage/AuthForm.module.css?6041","pages/SignupPage/AuthForm.jsx","pages/SignupPage/SignupPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"AuthContainer_container__WDYZj\",\"frame\":\"AuthContainer_frame__68pQI\",\"modal\":\"AuthContainer_modal__DZz-k\"};","import React from 'react';\nimport styles from './AuthContainer.module.css';\nimport bottle from \"../../assets/images/tablet/bottle_tablet.png\";\nimport bottlex2 from \"../../assets/images/tablet/bottle_tablet@2x.png\";\n\nconst AuthContainer = ({ children }) => {\n  return (\n    <section className={styles.container}>\n      <div className={styles.modal}>{children}</div>\n      <picture>\n        <source srcSet={`${bottlex2} 2x, ${bottle} 1x`} />\n        <img className={styles.frame} src={bottle} alt=\"signin\" />\n      </picture>\n    </section>\n  );\n};\n\nexport default AuthContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"signUpTitle\":\"AuthForm_signUpTitle__cnBJb\",\"field\":\"AuthForm_field__1NVKH\",\"fieldLabel\":\"AuthForm_fieldLabel__1hUhA\",\"customInput\":\"AuthForm_customInput__QwJL9\",\"submitButton\":\"AuthForm_submitButton__FUdjF\",\"signInLink\":\"AuthForm_signInLink__z7qPr\",\"passwordContainer\":\"AuthForm_passwordContainer__V7pU3\",\"errorInput\":\"AuthForm_errorInput__bmUiy\",\"errorMessage\":\"AuthForm_errorMessage__zAd0b\",\"eyeIcon\":\"AuthForm_eyeIcon__rKCel\"};","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { signup } from '../../redux/auth/operations';\nimport * as Yup from 'yup';\nimport { toast } from 'react-hot-toast';\nimport styles from './AuthForm.module.css';\nimport snippets from '../../assets/images/snippets.svg';\n\nconst AuthForm = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [showRepeatPassword, setShowRepeatPassword] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false); // Loading state\n  const dispatch = useDispatch();\n\n  const getUsernameFromEmail = email => {\n    const [username] = email.split('@');\n    return username;\n  };\n\n  const handleSubmit = async (values, actions) => {\n    setIsSubmitting(true); // Set loading state when submitting\n    const { repeatPassword, ...restValues } = values;\n    const username = getUsernameFromEmail(restValues.email);\n\n    const updatedValues = {\n      ...restValues,\n      name: username,\n    };\n\n    try {\n      await dispatch(signup(updatedValues));\n      actions.resetForm();\n    } catch (error) {\n      toast.error('Signup failed. Please try again.');\n    } finally {\n      setIsSubmitting(false); // Reset loading state after submission\n    }\n  };\n\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .email('Invalid email format')\n      .required('This field is required'),\n    password: Yup.string().required('This field is required'),\n    repeatPassword: Yup.string()\n      .oneOf([Yup.ref('password'), null], 'Passwords must match')\n      .required('This field is required'),\n  });\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const toggleRepeatPasswordVisibility = () => {\n    setShowRepeatPassword(!showRepeatPassword);\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n        repeatPassword: '',\n      }}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ errors, touched }) => (\n        <Form className={styles.authForm}>\n          <h1 className={styles.signUpTitle}>Sign Up</h1>\n          <div className={styles.field}>\n            <label className={styles.fieldLabel}>Enter your email</label>\n            <Field\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"E-mail\"\n              className={`${styles.customInput} ${\n                errors.email && touched.email ? styles.errorInput : ''\n              }`}\n              required\n            />\n            <ErrorMessage\n              name=\"email\"\n              component=\"div\"\n              className={styles.errorMessage}\n            />\n          </div>\n\n          <div className={styles.field}>\n            <label className={styles.fieldLabel}>Enter your password</label>\n            <div className={styles.passwordContainer}>\n              <Field\n                type={showPassword ? 'text' : 'password'}\n                name=\"password\"\n                placeholder=\"Password\"\n                className={`${styles.customInput} ${\n                  errors.password && touched.password ? styles.errorInput : ''\n                }`}\n                required\n              />\n              <span onClick={togglePasswordVisibility}>\n                {showPassword ? (\n                  <svg className={styles.eyeIcon} width=\"16\" height=\"16\">\n                    <use href={`${snippets}#icon-eye`}></use>\n                  </svg>\n                ) : (\n                  <svg className={styles.eyeIcon} width=\"16\" height=\"16\">\n                    <use href={`${snippets}#icon-eye-slash`}></use>\n                  </svg>\n                )}\n              </span>\n            </div>\n            <ErrorMessage\n              name=\"password\"\n              component=\"div\"\n              className={styles.errorMessage}\n            />\n          </div>\n\n          <div className={styles.field}>\n            <label className={styles.fieldLabel}>Repeat password</label>\n            <div className={styles.passwordContainer}>\n              <Field\n                type={showRepeatPassword ? 'text' : 'password'}\n                name=\"repeatPassword\"\n                placeholder=\"Repeat password\"\n                className={`${styles.customInput} ${\n                  errors.repeatPassword && touched.repeatPassword\n                    ? styles.errorInput\n                    : ''\n                }`}\n                required\n              />\n              <span onClick={toggleRepeatPasswordVisibility}>\n                {showRepeatPassword ? (\n                  <svg className={styles.eyeIcon} width=\"16\" height=\"16\">\n                    <use href={`${snippets}#icon-eye`}></use>\n                  </svg>\n                ) : (\n                  <svg className={styles.eyeIcon} width=\"16\" height=\"16\">\n                    <use href={`${snippets}#icon-eye-slash`}></use>\n                  </svg>\n                )}\n              </span>\n            </div>\n            <ErrorMessage\n              name=\"repeatPassword\"\n              component=\"div\"\n              className={styles.errorMessage}\n            />\n          </div>\n\n          <button\n            type=\"submit\"\n            className={styles.submitButton}\n            disabled={isSubmitting} // Disable button when submitting\n          >\n            {isSubmitting ? 'Signing Up...' : 'Sign Up'}\n          </button>\n\n          <Link to=\"/signin\" className={styles.signInLink}>\n            Sign in\n          </Link>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default AuthForm;\n","import React from 'react';\nimport AuthContainer from '../../components/AuthContainer/AuthContainer';\nimport AuthForm from './AuthForm';\n\nconst SignupPage = () => {\n  return (\n    <AuthContainer>\n      <AuthForm />\n    </AuthContainer>\n  );\n};\n\nexport default SignupPage;\n"],"names":["_ref","children","_jsxs","className","styles","_jsx","srcSet","bottlex2","bottle","src","alt","AuthForm","showPassword","setShowPassword","useState","showRepeatPassword","setShowRepeatPassword","isSubmitting","setIsSubmitting","dispatch","useDispatch","validationSchema","Yup","email","required","password","repeatPassword","oneOf","togglePasswordVisibility","toggleRepeatPasswordVisibility","Formik","initialValues","onSubmit","async","values","actions","restValues","username","split","getUsernameFromEmail","updatedValues","name","signup","resetForm","error","toast","errors","touched","Form","Field","type","placeholder","ErrorMessage","component","onClick","width","height","href","snippets","disabled","Link","to","SignupPage","AuthContainer"],"sourceRoot":""}