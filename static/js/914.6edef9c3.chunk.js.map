{"version":3,"file":"static/js/914.6edef9c3.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/DailyNormaModal/DailyNormaModal.module.css?cfa8","components/DailyNormaModal/DailyNormaModal.jsx","webpack://react-homework-template/./src/components/DailyNorma/DailyNorma.module.css?8e40","redux/water/selectors.js","components/DailyNorma/DailyNorma.jsx","webpack://react-homework-template/./src/components/WaterRatioPanel/WaterRatioPanel.module.css?a6e9","components/WaterRatioPanel/WaterRatioPanel.jsx","webpack://react-homework-template/./src/pages/HomePage/HomePage.module.css?5baa","webpack://react-homework-template/./src/components/MonthStatsTable/MonthStatsTable.module.css?b2ab","webpack://react-homework-template/./src/components/CalendarItem/CalendarItem.module.css?a1ae","webpack://react-homework-template/./src/components/DaysGeneralStats/DaysGeneralStats.module.css?b64d","components/DaysGeneralStats/DaysGeneralStats.jsx","components/CalendarItem/CalendarItem.jsx","components/MonthStatsTable/MonthStatsTable.jsx","webpack://react-homework-template/./src/components/TodayWaterList/WaterListRow/WaterListRow.module.css?9668","webpack://react-homework-template/./src/components/TodayWaterList/DeleteEntry/DeleteEntry.module.css?98a2","components/TodayWaterList/DeleteEntry/DeleteEntry.jsx","webpack://react-homework-template/./src/components/TodayListModal/TodayListModal.module.css?a26b","components/TodayListModal/TodayListModal.jsx","components/TodayWaterList/WaterListRow/WaterListRow.jsx","webpack://react-homework-template/./src/components/TodayWaterList/TodayWaterList.module.css?0bc6","components/TodayWaterList/TodayWaterList.jsx","webpack://react-homework-template/./src/components/WaterListWithCalendar/WaterListWithCalendar.module.css?8ddb","components/WaterListWithCalendar/WaterListWithCalendar.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalContent\":\"DailyNormaModal_modalContent__KvIF8\",\"textBlue\":\"DailyNormaModal_textBlue__kszgp\",\"formulaWrap\":\"DailyNormaModal_formulaWrap__JpCCc\",\"formulaLabel\":\"DailyNormaModal_formulaLabel__X95Cr\",\"descriptionContainer\":\"DailyNormaModal_descriptionContainer__D4qCO\",\"descriptionText\":\"DailyNormaModal_descriptionText__h1r-I\",\"calcutatorTitle\":\"DailyNormaModal_calcutatorTitle__fqA7i\",\"btnSave\":\"DailyNormaModal_btnSave__WLCXD\",\"errorMessage\":\"DailyNormaModal_errorMessage__QTBo8\",\"genderWrapper\":\"DailyNormaModal_genderWrapper__2zLey\",\"genderLabel\":\"DailyNormaModal_genderLabel__vGM2B\",\"fieldLabel\":\"DailyNormaModal_fieldLabel__mDK15\",\"resultLabel\":\"DailyNormaModal_resultLabel__tGSwD\",\"genderInput\":\"DailyNormaModal_genderInput__aQI6T\",\"fieldWrapper\":\"DailyNormaModal_fieldWrapper__hW7+t\",\"resultWrapper\":\"DailyNormaModal_resultWrapper__qaB5c\",\"fieldInput\":\"DailyNormaModal_fieldInput__ARcOw\",\"resultInput\":\"DailyNormaModal_resultInput__muC8R\"};","import { useEffect, useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport css from './DailyNormaModal.module.css';\nimport { selectUserGender } from '../../redux/auth/selectors';\nimport { useSelector } from 'react-redux';\n\n// Calculation function\nconst calculateWaterNorma = (gender, weight, activityTime) => {\n  const M = parseFloat(weight) || 0;\n  const T = parseFloat(activityTime) || 0;\n  return gender === 'woman' ? M * 0.03 + T * 0.4 : M * 0.04 + T * 0.6;\n};\n\n// Form validation schema\nconst validationSchema = Yup.object().shape({\n  waterToDrink: Yup.number().min(1, 'Weight must be greater than 0').required('Enter how much water you will drink'),\n});\n\nexport default function DailyNormaModal({ onClose, onSave }) {\n  const userGender = useSelector(selectUserGender);\n  const [gender, setGender] = useState(userGender || 'woman');\n  const [weight, setWeight] = useState(0);\n  const [activityTime, setActivityTime] = useState(0);\n  const [waterResult, setWaterResult] = useState(0);\n\n  // Recalculate water norm whenever gender, weight, or activityTime changes\n  useEffect(() => {\n    setWaterResult(calculateWaterNorma(gender, weight, activityTime));\n  }, [gender, weight, activityTime]);\n\n  return (\n    <div className={css.modalContent}>\n      <div className={css.formulaWrap}>\n        <p className={css.formulaLabel}>\n          For women: <span className={css.textBlue}>V=(M*0.03) + (T*0.4)</span>\n        </p>\n        <p className={css.formulaLabel}>\n          For men: <span className={css.textBlue}>V=(M*0.04) + (T*0.6)</span>\n        </p>\n      </div>\n      <div className={css.descriptionContainer}>\n        <p className={css.descriptionText}>\n          <span className={css.textBlue}>*</span> V is the volume of water\n          required in liters per day, M is your weight, and T is the duration of\n          intense activity in hours (set to 0 if none).\n        </p>\n      </div>\n\n      <h2 className={css.calcutatorTitle}>Calculate your rate:</h2>\n\n      <Formik\n        initialValues={{ waterToDrink: 0, weight: 0, activityTime: 0 }}\n        validationSchema={validationSchema}\n        onSubmit={values => {\n          onSave(parseFloat(values.waterToDrink));\n          onClose(); // Close modal after saving\n        }}\n      >\n        {() => (\n          <Form>\n            <div className={css.genderWrapper}>\n              <label className={css.genderLabel}>\n                <input\n                  className={css.genderInput}\n                  type=\"radio\"\n                  name=\"gender\"\n                  value=\"woman\"\n                  checked={gender === 'woman'}\n                  onChange={() => setGender('woman')}\n                />\n                For women\n              </label>\n              <label className={css.genderLabel}>\n                <input\n                  className={css.genderInput}\n                  type=\"radio\"\n                  name=\"gender\"\n                  value=\"man\"\n                  checked={gender === 'man'}\n                  onChange={() => setGender('man')}\n                />\n                For men\n              </label>\n            </div>\n\n            <div className={css.fieldWrapper}>\n              <label className={css.fieldLabel}>\n                Your weight in kilograms:\n                <input\n                  className={css.fieldInput}\n                  type=\"number\"\n                  name=\"weight\"\n                  value={weight}\n                  onChange={e => setWeight(e.target.value)}\n                  step=\"0.01\"\n                />\n                <ErrorMessage\n                  name=\"weight\"\n                  component=\"p\"\n                  className={css.errorMessage}\n                />\n              </label>\n            </div>\n\n            <div className={css.fieldWrapper}>\n              <label className={css.fieldLabel}>\n                The time of active participation in hours:\n                <input\n                  className={css.fieldInput}\n                  type=\"number\"\n                  name=\"activityTime\"\n                  value={activityTime}\n                  onChange={e => setActivityTime(e.target.value)}\n                  step=\"0.01\"\n                />\n                <ErrorMessage\n                  name=\"activityTime\"\n                  component=\"p\"\n                  className={css.errorMessage}\n                />\n              </label>\n            </div>\n\n            <p>\n              The required amount of water per day:{' '}\n              <span className={css.textBlue}>{waterResult.toFixed(1)} L</span>\n            </p>\n\n            <div className={css.resultWrapper}>\n              <label className={css.resultLabel}>\n                <h2 className={css.calcutatorTitle}>\n                  Write down how much water you will drink:\n                </h2>\n                <Field\n                  className={css.resultInput}\n                  type=\"number\"\n                  name=\"waterToDrink\"\n                  step=\"0.01\"\n                />\n                <ErrorMessage\n                  name=\"waterToDrink\"\n                  component=\"p\"\n                  className={css.errorMessage}\n                />\n              </label>\n            </div>\n\n            <button className={css.btnSave} type=\"submit\">\n              Save\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"normaContainer\":\"DailyNorma_normaContainer__yAGrT\",\"title\":\"DailyNorma_title__X4SZH\",\"normWater\":\"DailyNorma_normWater__8+Ruh\",\"editBtn\":\"DailyNorma_editBtn__S8zub\"};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectWaterVolumes = state => state.water.volumes;\n\nexport const selectIsLoading = state => state.water.isLoading;\n\nexport const selectError = state => state.water.error;\n\nexport const selectDailyNorm = state => state.water.dailyNorm;\n\nexport const selectTodaysWater = state => state.water.today;\n\nexport const selectTodaysWaterNotes = state => state.water.today.notes;\n\nexport const selectTodaysWaterDailyNorm = state => state.water.today.dailyNorm;\n\nexport const selectTodaysWaterPercentage = state => state.water.today.percentage;\n\nexport const selectTodaysWaterAmount = state => state.water.today.totalAmount;\n\nexport const selectMonthlyWaterData = state => state.water.monthlyConsumption;\n\nexport const selectVisibleWaterNotes = createSelector(\n  [selectTodaysWaterNotes],\n  (notes) => {\n    return notes.slice().sort((a, b) => new Date(a.date) - new Date(b.date));\n  }\n);\n\n","import React, { useState } from 'react';\nimport DailyNormaModal from '../DailyNormaModal/DailyNormaModal.jsx';\nimport css from './DailyNorma.module.css';\nimport Modal from 'components/Modal/Modal.jsx';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as selectors from '../../redux/water/selectors.js';\nimport { updateDailyWaterNorm } from '../../redux/water/operations.js';\n\nexport default function DailyNorma() {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const dispatch = useDispatch();\n  const todaysWaterDailyNorm = useSelector(selectors.selectTodaysWaterDailyNorm);\n  const userWaterNorma = todaysWaterDailyNorm ? todaysWaterDailyNorm / 1000 : '-';\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleSave = (newNorm) => {\n    const ml = newNorm * 1000;\n    dispatch(updateDailyWaterNorm({ dailyNormWater: ml }));\n  };\n\n  return (\n    <div className={css.normaContainer}>\n      <h2 className={css.title}>My daily norma</h2>\n      <div className={css.normWater}>\n        {`${userWaterNorma} L`}\n        <button className={css.editBtn} onClick={openModal}>\n          Edit\n        </button>\n      </div>\n\n      {isModalOpen && (\n        <Modal title=\"My daily norma\" onClose={closeModal}>\n          <DailyNormaModal onClose={closeModal} onSave={handleSave} />\n        </Modal>\n      )}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"WaterRatioPanel_box__T11qP\",\"panelContainer\":\"WaterRatioPanel_panelContainer__vZX7H\",\"label\":\"WaterRatioPanel_label__GUYqK\",\"sliderContainer\":\"WaterRatioPanel_sliderContainer__CR4Xr\",\"slider\":\"WaterRatioPanel_slider__+PTSK\",\"valueContainer\":\"WaterRatioPanel_valueContainer__gRrgy\",\"borderWrapper\":\"WaterRatioPanel_borderWrapper__A7Cc5\",\"afterBefor\":\"WaterRatioPanel_afterBefor__GlH46\",\"percent\":\"WaterRatioPanel_percent__O1bFg\",\"devider\":\"WaterRatioPanel_devider__BDjvE\",\"percentToday\":\"WaterRatioPanel_percentToday__Kzhcz\",\"addWaterButton\":\"WaterRatioPanel_addWaterButton__kqCNJ\",\"icon\":\"WaterRatioPanel_icon__ZAI64\"};","import React from 'react';\nimport icon from '../../assets/images/snippets.svg';\nimport css from './WaterRatioPanel.module.css';\nimport { useSelector } from 'react-redux';\nimport * as waterSelectors from '../../redux/water/selectors';\n\nexport default function WaterRatioPanel({\n  openModal,\n}) {\n  const todaysWaterPercentage = useSelector(\n    waterSelectors.selectTodaysWaterPercentage\n  );\n\n  const waterRatio = Math.floor(todaysWaterPercentage) || 0;\n\n  return (\n    <div className={css.box}>\n      <div className={css.panelContainer}>\n        <div className={css.sliderContainer}>\n          <label className={css.label} htmlFor=\"waterRange\">\n            Today\n          </label>\n          <input\n            type=\"range\"\n            id=\"waterRange\"\n            min=\"0\"\n            max=\"100\"\n            value={waterRatio}\n            className={css.slider}\n            style={{\n              background: `linear-gradient(to right, #9ebbff ${waterRatio}%, #d7e3ff ${waterRatio}%)`,\n            }}\n            readOnly\n          />\n        </div>\n        <div className={css.valueContainer}>\n          <div className={css.borderWrapper}>\n            <div className={css.afterBefor}>\n              <span className={css.devider}>|</span>\n              <span className={css.percent}>0%</span>\n            </div>\n            {waterRatio > 0 && (\n              <div className={css.afterBefor}>\n                <span className={css.devider}>|</span>\n                <span className={`${css.percent} ${css.percentToday}`}>\n                  {waterRatio}%\n                </span>\n              </div>\n            )}\n            <div className={css.afterBefor}>\n              <span className={css.devider}>|</span>\n              <span className={css.percent}>100%</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <button className={css.addWaterButton} onClick={openModal}>\n        <svg className={css.icon} width=\"24\" height=\"24\">\n          <use href={`${icon}#icon-plus-circle`}></use>\n        </svg>\n        Add Water\n      </button>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"HomePage_container__uNu-e\",\"homeContainer\":\"HomePage_homeContainer__6ghGM\",\"pageBackground\":\"HomePage_pageBackground__hiddn\",\"darkBottle\":\"HomePage_darkBottle__FimG+\",\"bottle\":\"HomePage_bottle__NI2g8\",\"title\":\"HomePage_title__UFLA3\",\"imageModal\":\"HomePage_imageModal__NmJ5u\",\"box\":\"HomePage_box__Vq-hE\"};","// extracted by mini-css-extract-plugin\nexport default {\"calendarContainer\":\"MonthStatsTable_calendarContainer__HR632\",\"containerDay\":\"MonthStatsTable_containerDay__ZMKic\",\"navigation\":\"MonthStatsTable_navigation__fWySF\",\"selectedDay\":\"MonthStatsTable_selectedDay__KoS7B\",\"loadingContainer\":\"MonthStatsTable_loadingContainer__QyIHi\",\"monthYear\":\"MonthStatsTable_monthYear__Rscm4\",\"month\":\"MonthStatsTable_month__q8RdM\",\"year\":\"MonthStatsTable_year__tOvLM\",\"prevButton\":\"MonthStatsTable_prevButton__Mcu34\",\"nextButton\":\"MonthStatsTable_nextButton__+Grzl\",\"daysList\":\"MonthStatsTable_daysList__uEEAv\",\"dayItem\":\"MonthStatsTable_dayItem__lh8AI\",\"calendarDay\":\"MonthStatsTable_calendarDay__AB7l+\",\"percentageText\":\"MonthStatsTable_percentageText__dojsM\"};","// extracted by mini-css-extract-plugin\nexport default {\"dayWrapper\":\"CalendarItem_dayWrapper__RvarJ\",\"dayItem\":\"CalendarItem_dayItem__Ebd9v\",\"lowPercentage\":\"CalendarItem_lowPercentage__irL+D\",\"fullPercentage\":\"CalendarItem_fullPercentage__6G6tv\",\"percentageText\":\"CalendarItem_percentageText__ytSOQ\",\"zeroPercentage\":\"CalendarItem_zeroPercentage__s3tZC\",\"calendarDay\":\"CalendarItem_calendarDay__-8qwF\"};","// extracted by mini-css-extract-plugin\nexport default {\"popup\":\"DaysGeneralStats_popup__B4CHa\",\"popupContent\":\"DaysGeneralStats_popupContent__UvZ+k\",\"title\":\"DaysGeneralStats_title__g7S8J\",\"text\":\"DaysGeneralStats_text__Fcz5z\",\"span\":\"DaysGeneralStats_span__QjKNe\"};","import React from 'react';\nimport css from './DaysGeneralStats.module.css';\n\nconst DaysGeneralStats = ({ selectedDayData }) => {\n  const { date, dailyNorm, percentage, consumptionCount } = selectedDayData;\n  const floorPercentage = Math.floor(percentage);\n\n  return (\n    <div className={css.popup}>\n      <div className={css.popupContent}>\n        <h3 className={css.title}>{date}</h3>\n        <p className={css.text}>\n          Daily norma: <span className={css.span}>{dailyNorm / 1000} L</span>\n        </p>\n        <p className={css.text}>\n          Fulfillment of the daily norm:{' '}\n          <span className={css.span}>{floorPercentage}%</span>\n        </p>\n        <p className={css.text}>\n          How many servings of water:{' '}\n          <span className={css.span}>{consumptionCount}</span>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default DaysGeneralStats;\n","import css from './CalendarItem.module.css';\nimport clsx from 'clsx';\nimport DaysGeneralStats from 'components/DaysGeneralStats/DaysGeneralStats';\n\nexport default function CalendarItem({ dayObject, onPopupToggle, isActive }) {\n  const { day, percentage } = dayObject;\n  const floorPercentage = Math.floor(percentage);\n  const circleClass = clsx(css.dayItem, {\n    [css.lowPercentage]: floorPercentage > 0 && floorPercentage < 100,\n    [css.fullPercentage]: floorPercentage >= 100,\n    [css.zeroPercentage]: floorPercentage === 0,\n  });\n\n  return (\n    <div className={css.dayWrapper} onClick={() => onPopupToggle(dayObject)}>\n      <div className={circleClass}>\n        <p className={css.calendarDay}>{day}</p>\n      </div>\n      <p className={css.percentageText}>{floorPercentage}%</p>\n\n      {isActive && (\n        <div\n          className='popup'\n          onClick={e => e.stopPropagation()}\n        >\n          <DaysGeneralStats selectedDayData={dayObject} />\n        </div>\n      )}\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { IoIosArrowForward, IoIosArrowBack } from 'react-icons/io';\nimport css from './MonthStatsTable.module.css';\nimport CalendarItem from '../CalendarItem/CalendarItem';\n\nconst MonthStatsTable = ({\n  monthlyWaterlist,\n  currentYear,\n  currentMonth,\n  onMonthChange,\n}) => {\n  const [activePopup, setActivePopup] = useState(null);\n\n  const handlePopupToggle = dayObject => {\n    setActivePopup(prev => (prev === dayObject ? null : dayObject));\n  };\n\n  const handlePrevMonth = () => {\n    const newMonth = currentMonth === 1 ? 12 : currentMonth - 1;\n    const newYear = currentMonth === 1 ? currentYear - 1 : currentYear;\n    onMonthChange(newYear, newMonth);\n  };\n\n  const handleNextMonth = () => {\n    const newMonth = currentMonth === 12 ? 1 : currentMonth + 1;\n    const newYear = currentMonth === 12 ? currentYear + 1 : currentYear;\n    onMonthChange(newYear, newMonth);\n  };\n\n  useEffect(() => {\n    const fetchData = () => {\n      console.log(\n        'Fetching data for year:',\n        currentYear,\n        'month:',\n        currentMonth\n      );\n    };\n\n    fetchData();\n  }, [currentYear, currentMonth]);\n\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (activePopup && !event.target.closest('.popup')) {\n        setActivePopup(null);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [activePopup]);\n\n  return (\n    <>\n      <div className={css.navigation}>\n        <h3 className={css.selectedDay}>Month</h3>\n        <div className={css.monthYear}>\n          <button className={css.prevButton} onClick={handlePrevMonth}>\n            <IoIosArrowBack />\n          </button>\n          <p className={css.month}>\n            {new Date(currentYear, currentMonth - 1).toLocaleString('en-US', {\n              month: 'long',\n            })}\n          </p>\n          <p className={css.year}>{currentYear}</p>\n          {currentYear < new Date().getFullYear() ||\n          (currentYear === new Date().getFullYear() &&\n            currentMonth < new Date().getMonth() + 1) ? (\n            <button className={css.nextButton} onClick={handleNextMonth}>\n              <IoIosArrowForward />\n            </button>\n          ) : (\n            <div style={{ width: '14px' }}></div>\n          )}\n        </div>\n      </div>\n\n      <div className={css.calendarContainer}>\n        <div className={css.containerDay}>\n          <ul className={css.daysList}>\n            {monthlyWaterlist.length > 0 &&\n              monthlyWaterlist.map(day => (\n                <li className=\"itemWrapper\" key={day.key}>\n                  <CalendarItem\n                    dayObject={day}\n                    onPopupToggle={handlePopupToggle}\n                    isActive={activePopup === day}\n                  />\n                </li>\n              ))}\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MonthStatsTable;\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"WaterListRow_listItem__Rqg7k\",\"icon\":\"WaterListRow_icon__840Ty\",\"volume\":\"WaterListRow_volume__QFv6s\",\"time\":\"WaterListRow_time__wsOxW\",\"editButton\":\"WaterListRow_editButton__xrjVE\",\"deleteButton\":\"WaterListRow_deleteButton__Wna6o\",\"editIcon\":\"WaterListRow_editIcon__wspvH\",\"deleteIcon\":\"WaterListRow_deleteIcon__SLLS8\"};","// extracted by mini-css-extract-plugin\nexport default {\"modalBody\":\"DeleteEntry_modalBody__y0E3g\",\"deleteBtn\":\"DeleteEntry_deleteBtn__MPHN3\",\"cancelBtn\":\"DeleteEntry_cancelBtn__aS1UJ\",\"textAreYou\":\"DeleteEntry_textAreYou__X1exT\",\"deleteTextEntry\":\"DeleteEntry_deleteTextEntry__qBXUv\",\"btnContainer\":\"DeleteEntry_btnContainer__fXkH8\",\"modalOverlay\":\"DeleteEntry_modalOverlay__pGLCX\",\"modalContent\":\"DeleteEntry_modalContent__ImhMS\",\"modalHeader\":\"DeleteEntry_modalHeader__HO467\",\"modalClose\":\"DeleteEntry_modalClose__f-0kL\"};","import React from 'react';\nimport styles from './DeleteEntry.module.css';\n\nconst DeleteEntry = ({ onCancel, onDelete }) => {\n\n  return (\n    <div className={styles.modalBody}>\n      <p className={styles.textAreYou}>\n        Are you sure you want to delete the entry?\n      </p>\n      <div className={styles.btnContainer}>\n        <button className={styles.cancelBtn} onClick={onCancel}>\n          Cancel\n        </button>\n        <button className={styles.deleteBtn} onClick={onDelete}>\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default DeleteEntry;\n","// extracted by mini-css-extract-plugin\nexport default {\"waterContent\":\"TodayListModal_waterContent__Q2HKr\",\"modalActions\":\"TodayListModal_modalActions__XD6mp\",\"saveButtonStyle\":\"TodayListModal_saveButtonStyle__WmFKC\",\"timeSelectBlock\":\"TodayListModal_timeSelectBlock__BKvGv\",\"waterInput\":\"TodayListModal_waterInput__vmcv-\",\"stepInputDown\":\"TodayListModal_stepInputDown__o5gB6\",\"namValue\":\"TodayListModal_namValue__nTX-5\",\"editSection\":\"TodayListModal_editSection__M27ff\",\"correctData\":\"TodayListModal_correctData__4flHC\",\"wtUsed\":\"TodayListModal_wtUsed__W68Sv\",\"recTime\":\"TodayListModal_recTime__3az5N\",\"stepInput\":\"TodayListModal_stepInput__hmEOW\",\"roundButton\":\"TodayListModal_roundButton__mIzFR\",\"waterInfoContainer\":\"TodayListModal_waterInfoContainer__-rkX7\",\"iconColor\":\"TodayListModal_iconColor__+LpAP\",\"waterLooc\":\"TodayListModal_waterLooc__TYlSN\",\"amPmIndicator\":\"TodayListModal_amPmIndicator__VZCVO\",\"amSide\":\"TodayListModal_amSide__FK380\",\"error\":\"TodayListModal_error__cq4nF\"};","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { useSelector } from 'react-redux';\nimport * as selectors from '../../redux/water/selectors.js';\nimport css from './TodayListModal.module.css';\nimport snippet from '../../assets/images/snippets.svg';\n\nfunction getCurrentTime() {\n  const date = new Date();\n  let minutes = Math.round(date.getMinutes() / 5) * 5;\n\n  // Check if rounding minutes goes up to 60\n  if (minutes === 60) {\n    minutes = 0; // Reset minutes to 0\n    date.setHours(date.getHours() + 1); // Increment the hour\n  }\n\n  const hours = date.getHours();\n  return `${hours < 10 ? `0${hours}` : hours}:${\n    minutes < 10 ? `0${minutes}` : minutes\n  }`;\n}\n\nconst generateTimeOptions = () => {\n  const options = [];\n  for (let h = 0; h < 24; h++) {\n    for (let m = 0; m < 60; m += 5) {\n      const hour = h < 10 ? `0${h}` : h;\n      const minute = m < 10 ? `0${m}` : m;\n      options.push(`${hour}:${minute}`);\n    }\n  }\n  return options;\n};\n\nconst validationSchema = Yup.object().shape({\n  waterVolume: Yup.number()\n    .min(1, 'The value must be greater than 0')\n    .max(5000, 'The maximum value is 5000')\n    .required('The value must be greater than 0'),\n});\n\nconst TodayListModal = ({ title = '', onSave, previousWaterData }) => {\n  const userDailyNormWater = useSelector(selectors.selectTodaysWaterDailyNorm);\n  const initialWaterAmount = previousWaterData ? previousWaterData.amount : 0;\n  const initialTime = previousWaterData\n    ? previousWaterData.time\n    : getCurrentTime();\n\n  return (\n    <Formik\n      initialValues={{\n        waterVolume: initialWaterAmount,\n        selectedTime: initialTime,\n      }}\n      validationSchema={validationSchema}\n      onSubmit={values => {\n        // Get the current date\n        const currentDate = new Date();\n        const [hours, minutes] = values.selectedTime.split(':').map(Number);\n        currentDate.setHours(hours, minutes, 0, 0);\n\n        const formattedDate = `${currentDate.getFullYear()}-${String(\n          currentDate.getMonth() + 1\n        ).padStart(2, '0')}-${String(currentDate.getDate()).padStart(\n          2,\n          '0'\n        )}T${String(hours).padStart(2, '0')}:${String(minutes).padStart(\n          2,\n          '0'\n        )}`;\n\n        const dataToSave = {\n          dailyNorm: userDailyNormWater, // Get the daily norm from Redux\n          amount: values.waterVolume,\n          date: formattedDate, // Format date as ISO string in local timezone\n        };\n        // Call the onSave function with the data\n        onSave(dataToSave);\n      }}\n    >\n      {({ values, setFieldValue, errors, touched }) => (\n        <Form className={css.waterContent}>\n          <div className={css.previousData}>\n            {previousWaterData && (\n              <div className={css.waterInfoContainer}>\n                <svg className={css.iconColor} width=\"24\" height=\"24\">\n                  <use href={`${snippet}#icon-glass`}></use>\n                </svg>\n                <span className={css.waterLooc}>\n                  {previousWaterData.amount} ml\n                </span>\n                <span className={css.amPmIndicator}>\n                  {previousWaterData.time}\n                </span>\n              </div>\n            )}\n          </div>\n\n          <div className={css.editSection}>\n            <input type=\"hidden\" name=\"dailyNorm\" />\n            <h3 className={css.title}>{title}</h3>\n            <label>Amount of water:</label>\n            <div className={css.stepInput}>\n              <button\n                type=\"button\"\n                className={css.roundButton}\n                onClick={() => {\n                  const newAmount = Math.max(1, values.waterVolume - 50);\n                  setFieldValue('waterVolume', newAmount);\n                }}\n                disabled={values.waterVolume <= 1} // Забороняємо зменшення, коли значення менше або рівне 1\n              >\n                -\n              </button>\n              <span>{values.waterVolume} ml</span>\n              <button\n                type=\"button\"\n                className={css.roundButton}\n                onClick={() => {\n                  const newAmount = Math.min(5000, values.waterVolume + 50);\n                  setFieldValue('waterVolume', newAmount);\n                }}\n              >\n                +\n              </button>\n            </div>\n            <label>Recording time:</label>\n            <div className={css.timeSelectBlock}>\n              <Field as=\"select\" name=\"selectedTime\">\n                {generateTimeOptions().map((time, index) => (\n                  <option key={index} value={time}>\n                    {time}\n                  </option>\n                ))}\n              </Field>\n            </div>\n            <label className={css.namValue}>\n              Enter the value of the water used:\n            </label>\n            <Field\n              type=\"number\"\n              name=\"waterVolume\"\n              className={css.waterInput}\n              min={1}\n              max={5000}\n              onFocus={e => {\n                if (e.target.value === '0') {\n                  setFieldValue('waterVolume', '');\n                }\n              }}\n              onChange={e => {\n                let value = e.target.value;\n\n                if (value === '') {\n                  setFieldValue('waterVolume', '');\n                  return;\n                }\n\n                value = Math.max(1, Math.min(5000, Number(value)));\n\n                setFieldValue('waterVolume', value);\n              }}\n            />\n            {errors.waterVolume && touched.waterVolume ? (\n              <div className={css.error}>{errors.waterVolume}</div>\n            ) : null}\n          </div>\n\n          <div className={css.modalActions}>\n            <div className={css.stepInputDown}>\n              <span>{values.waterVolume} ml</span>\n            </div>\n            <div>\n              <button\n                type=\"submit\"\n                className={`${css.stepSave} ${css.saveButtonStyle}`}\n              >\n                Save\n              </button>\n            </div>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default TodayListModal;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from './WaterListRow.module.css';\nimport icons from '../../../assets/images/snippets.svg';\nimport Modal from '../../Modal/Modal';\nimport DeleteEntryModal from '../DeleteEntry/DeleteEntry';\nimport TodayListModal from '../../TodayListModal/TodayListModal';\nimport {\n  deleteWaterVolume,\n  updateWaterVolume,\n} from '../../../redux/water/operations';\n\nexport default function WaterListRow({ rowData, currentYear, currentMonth }) {\n  const { _id, amount, date } = rowData || {};\n\n  const time = date ? date.split('T')[1] : 'No time available';\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [modalEditIsOpen, setModalEditIsOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const openDeleteModal = () => setModalIsOpen(true);\n  const closeDeleteModal = () => setModalIsOpen(false);\n  const openEditModal = () => setModalEditIsOpen(true);\n  const closeEditModal = () => setModalEditIsOpen(false);\n\n  const handleDelete = waterId => {\n    dispatch(deleteWaterVolume(waterId))\n    closeDeleteModal();\n  };\n\n  const handleEdit = (waterId, data) => {\n    dispatch(updateWaterVolume({ id: waterId, updatedData: data }))\n    closeEditModal();\n  };\n\n  return (\n    <div className={styles.listItem}>\n      <svg className={styles.icon} width=\"36\" height=\"36\">\n        <use href={`${icons}#icon-glass`} />\n      </svg>\n      <p className={styles.volume}>{amount} ml</p>\n      <p className={styles.time}>{time}</p>\n\n      <button\n        className={styles.editButton}\n        aria-label=\"Edit\"\n        onClick={openEditModal}\n      >\n        <svg className={styles.editIcon} width=\"16\" height=\"16\">\n          <use href={`${icons}#icon-pencil`} />\n        </svg>\n      </button>\n\n      <button\n        className={styles.deleteButton}\n        aria-label=\"Delete\"\n        onClick={openDeleteModal}\n      >\n        <svg className={styles.deleteIcon} width=\"16\" height=\"16\">\n          <use href={`${icons}#icon-trash`} />\n        </svg>\n      </button>\n\n      {modalIsOpen && (\n        <Modal title=\"Delete Entry\" onClose={closeDeleteModal}>\n          <DeleteEntryModal\n            onCancel={closeDeleteModal}\n            onDelete={() => handleDelete(_id)}\n          />\n        </Modal>\n      )}\n      {modalEditIsOpen && (\n        <Modal\n          title=\"Edit the entered amount of water\"\n          onClose={closeEditModal}\n        >\n          <TodayListModal\n            title=\"Correct entered data:\"\n            onSave={values => handleEdit(_id, values)}\n            previousWaterData={{ amount, time }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"TodayWaterList_listItem__Nh9Nv\",\"listContainer\":\"TodayWaterList_listContainer__fkpQ-\",\"scrollContainer\":\"TodayWaterList_scrollContainer__lZQxd\"};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport * as selectors from '../../redux/water/selectors.js';\nimport WaterListRow from './WaterListRow/WaterListRow';\n\nimport styles from './TodayWaterList.module.css';\n\nexport default function TodayWaterList({ currentYear, currentMonth }) {\n  const todaysWaterList = useSelector(selectors.selectVisibleWaterNotes);\n\n  return (\n    <div className={`${styles.listContainer} ${styles.todayWaterList}`}>\n      <div className={styles.scrollContainer}>\n        <ul className={styles.waterList}>\n          {todaysWaterList.map((note, index) => (\n            <li className={styles.waterItem} key={`${note._id}-${index}`}>\n              <WaterListRow\n                rowData={note}\n                currentYear={currentYear}\n                currentMonth={currentMonth}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"WaterListWithCalendar_container__ouRwP\",\"todayText\":\"WaterListWithCalendar_todayText__moxdA\",\"waterList\":\"WaterListWithCalendar_waterList__tdKao\",\"addButtonContainer\":\"WaterListWithCalendar_addButtonContainer__LCyKM\",\"icon\":\"WaterListWithCalendar_icon__6YnVk\",\"addButton\":\"WaterListWithCalendar_addButton__7y9iH\",\"addText\":\"WaterListWithCalendar_addText__I9ykQ\",\"emptyContainer\":\"WaterListWithCalendar_emptyContainer__d8ot0\",\"buttonContainer\":\"WaterListWithCalendar_buttonContainer__2mUkk\"};","import { useSelector } from 'react-redux';\nimport * as waterSelectors from '../../redux/water/selectors';\nimport MonthStatsTable from '../MonthStatsTable/MonthStatsTable';\nimport TodayWaterList from '../TodayWaterList/TodayWaterList';\nimport Loading from '../Loading/Loading';\nimport snippets from '../../assets/images/snippets.svg';\nimport styles from './WaterListWithCalendar.module.css';\n\nconst WaterListWithCalendar = ({\n  openModal,\n  currentYear,\n  currentMonth,\n  setCurrentYear,\n  setCurrentMonth,\n}) => {\n  const waterIsLoading = useSelector(waterSelectors.selectIsLoading);\n  const waterIsError = useSelector(waterSelectors.selectError);\n  const waterNotes = useSelector(waterSelectors.selectTodaysWaterNotes) || [];\n  const monthlyConsumption =\n    useSelector(waterSelectors.selectMonthlyWaterData) || [];\n  const monthlyWaterlist = monthlyConsumption?.data || [];\n\n  const handleMonthChange = (newYear, newMonth) => {\n    setCurrentYear(newYear);\n    setCurrentMonth(newMonth);\n  };\n\n  return (\n    <div className={styles.container}>\n      <h2 className={styles.todayText}>Today</h2>\n      <div className={styles.waterList}>\n        {waterIsLoading && <Loading />}\n        {!waterIsLoading && waterIsError && (\n          <div className={styles.error}>Error loading water data</div>\n        )}\n        {!waterIsLoading && !waterIsError && (\n          <>\n            {waterNotes.length > 0 ? (\n              <>\n                <TodayWaterList\n                  openModal={openModal}\n                  currentYear={currentYear}\n                  currentMonth={currentMonth}\n                />\n                <div className={styles.addButtonContainer}>\n                  <button className={styles.addButton} onClick={openModal}>\n                    <svg className={styles.icon} width=\"24\" height=\"24\">\n                      <use href={`${snippets}#icon-plus`} />\n                    </svg>\n                    <span className={styles.addText}>Add water</span>\n                  </button>\n                </div>\n              </>\n            ) : (\n              <div className={styles.emptyContainer}>\n                <div className={styles.addButtonContainer}>\n                  <button className={styles.addButton} onClick={openModal}>\n                    <svg className={styles.icon} width=\"24\" height=\"24\">\n                      <use href={`${snippets}#icon-plus`} />\n                    </svg>\n                    <span className={styles.addText}>Add water</span>\n                  </button>\n                </div>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <div className={styles.calendar}>\n        {waterIsLoading && <Loading />}\n        {!waterIsLoading && waterIsError && (\n          <div className={styles.error}>Error loading water data</div>\n        )}\n        {!waterIsLoading && !waterIsError && monthlyWaterlist.length > 0 && (\n          <MonthStatsTable\n            monthlyWaterlist={monthlyWaterlist}\n            currentYear={currentYear}\n            currentMonth={currentMonth}\n            onMonthChange={handleMonthChange}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default WaterListWithCalendar;\n","import React, { useEffect, useState } from 'react';\nimport DailyNorma from '../../components/DailyNorma/DailyNorma.jsx';\nimport WaterRatioPanel from '../../components/WaterRatioPanel/WaterRatioPanel.jsx';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchTodayWaterConsumption,\n  fetchMonthlyWaterConsumption,\n  addWaterVolume,\n} from '../../redux/water/operations';\nimport * as selectors from '../../redux/auth/selectors.js';\nimport css from './HomePage.module.css';\nimport botleImage1x from '../../assets/images/desktop/botle_home_screen.png';\nimport botleImage2x from '../../assets/images/desktop/botle_home_screen@2x.png';\nimport tabletImage1x from '../../assets/images/tablet/bottle_home_screen_tablet.png';\nimport tabletImage2x from '../../assets/images/tablet/bottle_home_screen_tablet@2x.png';\nimport mobileImage1x from '../../assets/images/mob/bottle_home_screen_mob.png';\nimport mobileImage2x from '../../assets/images/mob/bottle_home_screen_mob@2x.png';\nimport WaterListWithCalendar from '../../components/WaterListWithCalendar/WaterListWithCalendar.jsx';\nimport Modal from 'components/Modal/Modal.jsx';\nimport TodayListModal from 'components/TodayListModal/TodayListModal.jsx';\nimport clsx from 'clsx';\n\nimport DarkBottleDesktop from '../../assets/images/desktop/Dark_bottle_home_desc.avif';\nimport DarkBottleDesktop2x from '../../assets/images/desktop/Dark_bottle_home_desc_2x.avif';\nimport DarkBottleTablet from '../../assets/images/tablet/Dark_bottle_home_tab.avif';\nimport DarkBottleTaablet2x from '../../assets/images/tablet/Dark_bottle_home_tab_2x.avif';\nimport DarkBottleMobile from '../../assets/images/mob/Dark_bottle_home_mob.avif';\nimport DarkBottleMobile2x from '../../assets/images/mob/Dark_bottle_home_mob_2x.avif'\n\nexport default function HomePage() {\n  const today = new Date();\n  const [currentYear, setCurrentYear] = useState(today.getFullYear());\n  const [currentMonth, setCurrentMonth] = useState(today.getMonth() + 1);\n  const userAuthLoading = useSelector(selectors.selectAuthLoading);\n  const userAuthError = useSelector(selectors.selectAuthError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTodayWaterConsumption());\n    dispatch(\n      fetchMonthlyWaterConsumption({ year: currentYear, month: currentMonth })\n    );\n  }, [dispatch, currentYear, currentMonth]);\n\n  const containerClass = clsx(css.homeContainer, css.pageBackground);\n  const contentClass = clsx('mainContainer', css.container);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const toggleModal = setModalOpen => () => {\n    setModalOpen(prev => !prev);\n  };\n\n  const handleSave = data => {\n    toggleModal(setIsModalOpen)();\n    dispatch(addWaterVolume(data))\n  };\n\n  const renderModal = () => {\n    if (isModalOpen) {\n      return (\n        <Modal title=\"Add Water\" onClose={toggleModal(setIsModalOpen)}>\n          <TodayListModal title=\"Choose a value:\" onSave={handleSave} />\n        </Modal>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <section id=\"homePage\" className={containerClass}>\n      <div className={contentClass}>\n        <div className={css.box}>\n          <div className={css.imageModal}>\n            <h1 className={css.title}>HomePage</h1>\n            <DailyNorma />\n            <picture className={css.bottle}>\n              <source\n                srcSet={`${botleImage1x} 1x, ${botleImage2x} 2x`}\n                media=\"(min-width: 1440px)\"\n              />\n              <source\n                srcSet={`${tabletImage1x} 1x, ${tabletImage2x} 2x`}\n                media=\"(min-width: 768px) and (max-width: 1439px)\"\n              />\n              <source\n                srcSet={`${mobileImage1x} 1x, ${mobileImage2x} 2x`}\n                media=\"(max-width: 767px)\"\n              />\n              <img\n                className={css.photo}\n                loading=\"lazy\"\n                src={botleImage1x}\n                alt=\"Bottle\"\n              />\n            </picture>\n            <picture className={css.darkBottle}>\n              <source\n              srcSet={`${DarkBottleDesktop} 1x, ${DarkBottleDesktop2x} 2x`}\n              media=\"(min-width: 1440px)\"\n              />\n              <source\n              srcSet={`${DarkBottleTablet} 1x, ${DarkBottleTaablet2x} 2x`}\n              media=\"(min-width: 768px) and (max-width: 1439px)\"\n              />\n              <source\n              srcSet={`${DarkBottleMobile} 1x, ${DarkBottleMobile2x} 2x`}\n              media=\"(max-width: 767px)\"\n              />\n              <img className={css.darkBootle} src={DarkBottleDesktop} alt=\"Bottle\" />\n            </picture>\n          </div>\n          {!userAuthLoading && !userAuthError && (\n            <WaterRatioPanel openModal={toggleModal(setIsModalOpen)} />\n          )}\n        </div>\n        {!userAuthLoading && !userAuthError && (\n          <WaterListWithCalendar\n            openModal={toggleModal(setIsModalOpen)}\n            currentYear={currentYear}\n            currentMonth={currentMonth}\n            setCurrentYear={setCurrentYear}\n            setCurrentMonth={setCurrentMonth}\n          />\n        )}\n      </div>\n      {renderModal()}\n    </section>\n  );\n}\n"],"names":["calculateWaterNorma","gender","weight","activityTime","M","parseFloat","T","validationSchema","Yup","shape","waterToDrink","min","required","DailyNormaModal","_ref","onClose","onSave","userGender","useSelector","selectUserGender","setGender","useState","setWeight","setActivityTime","waterResult","setWaterResult","useEffect","_jsxs","className","css","modalContent","children","formulaWrap","formulaLabel","_jsx","textBlue","descriptionContainer","descriptionText","calcutatorTitle","Formik","initialValues","onSubmit","values","Form","genderWrapper","genderLabel","genderInput","type","name","value","checked","onChange","fieldWrapper","fieldLabel","fieldInput","e","target","step","ErrorMessage","component","errorMessage","toFixed","resultWrapper","resultLabel","Field","resultInput","btnSave","selectIsLoading","state","water","isLoading","selectError","error","selectTodaysWaterNotes","today","notes","selectTodaysWaterDailyNorm","dailyNorm","selectTodaysWaterPercentage","percentage","selectMonthlyWaterData","monthlyConsumption","selectVisibleWaterNotes","createSelector","slice","sort","a","b","Date","date","DailyNorma","isModalOpen","setIsModalOpen","dispatch","useDispatch","todaysWaterDailyNorm","selectors","userWaterNorma","closeModal","normaContainer","title","normWater","editBtn","onClick","openModal","Modal","newNorm","ml","updateDailyWaterNorm","dailyNormWater","WaterRatioPanel","todaysWaterPercentage","waterSelectors","waterRatio","Math","floor","box","panelContainer","sliderContainer","label","htmlFor","id","max","slider","style","background","readOnly","valueContainer","borderWrapper","afterBefor","devider","percent","percentToday","addWaterButton","icon","width","height","href","selectedDayData","consumptionCount","floorPercentage","CalendarItem","dayObject","onPopupToggle","isActive","day","circleClass","clsx","stopPropagation","DaysGeneralStats","monthlyWaterlist","currentYear","currentMonth","onMonthChange","activePopup","setActivePopup","handlePopupToggle","prev","console","log","handleClickOutside","event","closest","document","addEventListener","removeEventListener","_Fragment","handlePrevMonth","IoIosArrowBack","toLocaleString","month","getFullYear","getMonth","handleNextMonth","IoIosArrowForward","length","map","key","onCancel","onDelete","styles","generateTimeOptions","options","h","m","hour","minute","push","waterVolume","previousWaterData","userDailyNormWater","initialWaterAmount","amount","initialTime","time","minutes","round","getMinutes","setHours","getHours","hours","getCurrentTime","selectedTime","currentDate","split","Number","formattedDate","String","padStart","getDate","dataToSave","_ref2","setFieldValue","errors","touched","waterContent","previousData","waterInfoContainer","iconColor","snippet","waterLooc","amPmIndicator","editSection","stepInput","roundButton","newAmount","disabled","timeSelectBlock","as","index","namValue","waterInput","onFocus","modalActions","stepInputDown","stepSave","saveButtonStyle","WaterListRow","rowData","_id","modalIsOpen","setModalIsOpen","modalEditIsOpen","setModalEditIsOpen","closeDeleteModal","closeEditModal","icons","openEditModal","openDeleteModal","DeleteEntryModal","handleDelete","waterId","deleteWaterVolume","TodayListModal","handleEdit","data","updateWaterVolume","updatedData","TodayWaterList","todaysWaterList","listContainer","todayWaterList","scrollContainer","waterList","note","waterItem","setCurrentYear","setCurrentMonth","waterIsLoading","waterIsError","waterNotes","container","todayText","Loading","addButtonContainer","addButton","snippets","addText","emptyContainer","calendar","MonthStatsTable","handleMonthChange","newYear","newMonth","HomePage","userAuthLoading","userAuthError","fetchTodayWaterConsumption","fetchMonthlyWaterConsumption","year","containerClass","homeContainer","pageBackground","contentClass","toggleModal","setModalOpen","handleSave","addWaterVolume","imageModal","bottle","srcSet","botleImage1x","botleImage2x","media","tabletImage1x","tabletImage2x","mobileImage1x","mobileImage2x","photo","loading","src","alt","darkBottle","DarkBottleDesktop","DarkBottleDesktop2x","DarkBottleTablet","DarkBottleTaablet2x","DarkBottleMobile","DarkBottleMobile2x","darkBootle","WaterListWithCalendar"],"sourceRoot":""}