{"version":3,"file":"static/js/803.c7c521ff.chunk.js","mappings":"kMACA,QAA+B,sCAA/B,EAAgF,kCAAhF,EAAgI,qCAAhI,EAAoL,sCAApL,EAAiP,8CAAjP,EAAiT,yCAAjT,EAA4W,yCAA5W,EAA+Z,iCAA/Z,EAA+c,sCAA/c,EAAqgB,uCAArgB,EAA0jB,qCAA1jB,EAA4mB,oCAA5mB,EAA8pB,qCAA9pB,EAAitB,qCAAjtB,EAAqwB,sCAArwB,EAA2zB,uCAA3zB,EAA+2B,oCAA/2B,EAAi6B,qC,iCCOj6B,MAOMA,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,aAAcF,EAAAA,KAAaG,SAAS,yCAGvB,SAASC,EAAeC,GAAuB,IAAtB,QAAEC,EAAO,OAAEC,GAAQF,EACzD,MAAMG,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,KACxBC,EAAQC,IAAaC,EAAAA,EAAAA,UAASL,GAAc,UAC5CM,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,IAC9BG,EAAcC,IAAmBJ,EAAAA,EAAAA,UAAS,IAC1CK,EAAaC,IAAkBN,EAAAA,EAAAA,UAAS,GAO/C,OAJAO,EAAAA,EAAAA,YAAU,KACRD,EApBwBE,EAACV,EAAQG,EAAQE,KAC3C,MAAMM,EAAIC,WAAWT,IAAW,EAC1BU,EAAID,WAAWP,IAAiB,EACtC,MAAkB,UAAXL,EAAyB,IAAJW,EAAe,GAAJE,EAAc,IAAJF,EAAe,GAAJE,CAAO,EAiBlDH,CAAoBV,EAAQG,EAAQE,GAAc,GAChE,CAACL,EAAQG,EAAQE,KAGlBS,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC/BH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAgBC,SAAA,EAC9BH,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAiBC,SAAA,CAAC,eACnBC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAaC,SAAC,6BAE5CH,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAiBC,SAAA,CAAC,aACrBC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAaC,SAAC,gCAG5CC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAyBC,UACvCH,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAoBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAaC,SAAC,MAAQ,uJAM3CC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAoBC,SAAC,0BAEpCC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CAAE7B,aAAc,EAAGY,OAAQ,EAAGE,aAAc,GAC3DjB,iBAAkBA,EAClBiC,SAAUC,IACR1B,EAAOgB,WAAWU,EAAO/B,eACzBI,GAAS,EACTsB,SAEDA,KACCH,EAAAA,EAAAA,MAACS,EAAAA,GAAI,CAAAN,SAAA,EACHH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAkBC,SAAA,EAChCH,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAgBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SACEH,UAAWC,EACXQ,KAAK,QACLC,KAAK,SACLC,MAAM,QACNC,QAAoB,UAAX3B,EACT4B,SAAUA,IAAM3B,EAAU,WAC1B,gBAGJa,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAgBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SACEH,UAAWC,EACXQ,KAAK,QACLC,KAAK,SACLC,MAAM,MACNC,QAAoB,QAAX3B,EACT4B,SAAUA,IAAM3B,EAAU,SAC1B,iBAKNiB,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAiBC,UAC/BH,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAeC,SAAA,CAAC,6BAEhCC,EAAAA,EAAAA,KAAA,SACEH,UAAWC,EACXQ,KAAK,SACLC,KAAK,SACLC,MAAOvB,EACPyB,SAAUC,GAAKzB,EAAUyB,EAAEC,OAAOJ,OAClCK,KAAK,UAEPb,EAAAA,EAAAA,KAACc,EAAAA,GAAY,CACXP,KAAK,SACLQ,UAAU,IACVlB,UAAWC,UAKjBE,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAiBC,UAC/BH,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAeC,SAAA,CAAC,8CAEhCC,EAAAA,EAAAA,KAAA,SACEH,UAAWC,EACXQ,KAAK,SACLC,KAAK,eACLC,MAAOrB,EACPuB,SAAUC,GAAKvB,EAAgBuB,EAAEC,OAAOJ,OACxCK,KAAK,UAEPb,EAAAA,EAAAA,KAACc,EAAAA,GAAY,CACXP,KAAK,eACLQ,UAAU,IACVlB,UAAWC,UAKjBF,EAAAA,EAAAA,MAAA,KAAAG,SAAA,CAAG,wCACqC,KACtCH,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAaC,SAAA,CAAEV,EAAY2B,QAAQ,GAAG,YAGzDhB,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAkBC,UAChCH,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAgBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAoBC,SAAC,+CAGpCC,EAAAA,EAAAA,KAACiB,EAAAA,GAAK,CACJpB,UAAWC,EACXQ,KAAK,SACLC,KAAK,eACLM,KAAK,UAEPb,EAAAA,EAAAA,KAACc,EAAAA,GAAY,CACXP,KAAK,eACLQ,UAAU,IACVlB,UAAWC,UAKjBE,EAAAA,EAAAA,KAAA,UAAQH,UAAWC,EAAaQ,KAAK,SAAQP,SAAC,gBAQ1D,CC3JA,QAAiC,mCAAjC,EAA4E,0BAA5E,EAAkH,8BAAlH,EAA0J,4B,wBCCnJ,MAEMmB,EAAkBC,GAASA,EAAMC,MAAMC,UAEvCC,EAAcH,GAASA,EAAMC,MAAMG,MAMnCC,EAAyBL,GAASA,EAAMC,MAAMK,MAAMC,MAEpDC,EAA6BR,GAASA,EAAMC,MAAMK,MAAMG,UAExDC,EAA8BV,GAASA,EAAMC,MAAMK,MAAMK,WAIzDC,EAAyBZ,GAASA,EAAMC,MAAMY,mBAE9CC,GAA0BC,EAAAA,EAAAA,IACrC,CAACV,IACAE,GACQA,EAAMS,QAAQC,MAAK,CAACC,EAAGC,IAAM,IAAIC,KAAKF,EAAEG,MAAQ,IAAID,KAAKD,EAAEE,U,cCjBvD,SAASC,IACtB,MAAOC,EAAaC,IAAkB3D,EAAAA,EAAAA,WAAS,GACzC4D,GAAWC,EAAAA,EAAAA,MACXC,GAAuBlE,EAAAA,EAAAA,IAAYmE,GACnCC,EAAiBF,EAAuBA,EAAuB,IAAO,IAMtEG,EAAaA,KACjBN,GAAe,EAAM,EAQvB,OACE/C,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAmBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAUC,SAAC,oBAC1BH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAcC,SAAA,CAC3B,GAAGiD,OACJhD,EAAAA,EAAAA,KAAA,UAAQH,UAAWC,EAAaoD,QAlBpBC,KAChBR,GAAe,EAAK,EAiBmC5C,SAAC,YAKrD2C,IACC1C,EAAAA,EAAAA,KAACoD,EAAAA,EAAK,CAACC,MAAM,iBAAiB5E,QAASwE,EAAWlD,UAChDC,EAAAA,EAAAA,KAACzB,EAAe,CAACE,QAASwE,EAAYvE,OAjB1B4E,IAClB,MAAMC,EAAe,IAAVD,EACXV,GAASY,EAAAA,EAAAA,IAAqB,CAAEC,eAAgBF,IAAM,QAoB1D,C,cC3CA,QAAsB,6BAAtB,EAAoE,wCAApE,EAAoH,+BAApH,EAAqK,yCAArK,EAAuN,gCAAvN,EAAwQ,wCAAxQ,EAAgU,uCAAhU,EAAoX,oCAApX,EAAka,iCAAla,GAA6c,iCAA7c,GAA6f,sCAA7f,GAAojB,wCAApjB,GAAmmB,8BCKplB,SAASG,GAAelF,GAEnC,IAFoC,UACtC2E,GACD3E,EACC,MAAMmF,GAAwB/E,EAAAA,EAAAA,IAC5BgF,GAGIC,EAAaC,KAAKC,MAAMJ,IAA0B,EAExD,OACE/D,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAQC,SAAA,EACtBH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAmBC,SAAA,EACjCH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAoBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,SAAOH,UAAWC,EAAWkE,QAAQ,aAAYjE,SAAC,WAGlDC,EAAAA,EAAAA,KAAA,SACEM,KAAK,QACL2D,GAAG,aACHC,IAAI,IACJC,IAAI,MACJ3D,MAAOqD,EACPhE,UAAWC,EACXsE,MAAO,CACLC,WAAY,qCAAqCR,eAAwBA,OAE3ES,UAAQ,QAGZtE,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAmBC,UACjCH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAkBC,SAAA,EAChCH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,GAAYC,SAAC,OAC9BC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAYC,SAAC,UAE/B8D,EAAa,IACZjE,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,GAAYC,SAAC,OAC9BH,EAAAA,EAAAA,MAAA,QAAMC,UAAW,GAAGC,KAAeA,KAAmBC,SAAA,CACnD8D,EAAW,WAIlBjE,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,GAAYC,SAAC,OAC9BC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAYC,SAAC,qBAKtCH,EAAAA,EAAAA,MAAA,UAAQC,UAAWC,GAAoBoD,QAASC,EAAUpD,SAAA,EACxDC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,GAAUyE,MAAM,KAAKC,OAAO,KAAIzE,UAC9CC,EAAAA,EAAAA,KAAA,OAAKyE,KAAM,GAAGC,EAAAA,yBACV,iBAKd,CC/DA,UAAgB,UAAY,4BAA4B,cAAgB,gCAAgC,eAAiB,iCAAiC,MAAQ,wBAAwB,WAAa,6BAA6B,IAAM,uB,iXCA1O,SAAoC,2CAApC,GAA8F,sCAA9F,GAAiJ,oCAAjJ,GAAmM,qCAAnM,GAAiT,mCAAjT,GAA4V,+BAA5V,GAAkY,8BAAlY,GAA6a,oCAA7a,GAA8d,oCAA9d,GAA6gB,kCCA7gB,GAA6B,iCAA7B,GAAwE,8BAAxE,GAAsH,oCAAtH,GAA2K,qCAA3K,GAAiO,qCAAjO,GAAuR,qCAAvR,GAA0U,kC,eCA1U,SAAwB,gCAAxB,GAAuE,uCAAvE,GAAsH,gCAAtH,GAA6J,+BAA7J,GAAmM,+BC0BnM,GAxByBlG,IAA0B,IAAzB,gBAAEmG,GAAiBnG,EAC3C,MAAM,KAAEgE,EAAI,UAAEZ,EAAS,WAAEE,EAAU,iBAAE8C,GAAqBD,EACpDE,EAAkBf,KAAKC,MAAMjC,GAEnC,OACE9B,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,GAAUC,UACxBH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAiBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,GAAUC,SAAEyC,KAC3B5C,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,GAASC,SAAA,CAAC,iBACTH,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,GAASC,SAAA,CAAE6B,EAAY,IAAK,YAE5DhC,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,GAASC,SAAA,CAAC,iCACS,KAC/BH,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,GAASC,SAAA,CAAE8E,EAAgB,WAE9CjF,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,GAASC,SAAA,CAAC,8BACM,KAC5BC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,GAASC,SAAE6E,WAG5B,ECnBK,SAASE,GAAYtG,GAA0C,IAAzC,UAAEuG,EAAS,cAAEC,EAAa,SAAEC,GAAUzG,EACzE,MAAM,IAAE0G,EAAG,WAAEpD,GAAeiD,EACtBF,EAAkBf,KAAKC,MAAMjC,GAC7BqD,GAAcC,EAAAA,GAAAA,GAAKtF,GAAa,CACpC,CAACA,IAAoB+E,EAAkB,GAAKA,EAAkB,IAC9D,CAAC/E,IAAqB+E,GAAmB,IACzC,CAAC/E,IAAyC,IAApB+E,IAGxB,OACEjF,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAgBoD,QAASA,IAAM8B,EAAcD,GAAWhF,SAAA,EACtEC,EAAAA,EAAAA,KAAA,OAAKH,UAAWsF,EAAYpF,UAC1BC,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,GAAgBC,SAAEmF,OAElCtF,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,GAAmBC,SAAA,CAAE8E,EAAgB,OAElDI,IACCjF,EAAAA,EAAAA,KAAA,OACEH,UAAU,QACVqD,QAASvC,GAAKA,EAAE0E,kBAAkBtF,UAElCC,EAAAA,EAAAA,KAACsF,GAAgB,CAACX,gBAAiBI,QAK7C,CCrBA,MAwFA,GAxFwBvG,IAA2B,IAA1B,iBAAE+G,GAAkB/G,EAE3C,MAAMgE,EAAO,IAAID,MAEViD,EAAaC,IAAkBzG,EAAAA,EAAAA,UAASwD,EAAKkD,gBAC7CC,EAAcC,IAAmB5G,EAAAA,EAAAA,UAASwD,EAAKqD,WAAW,IAC1DC,EAAaC,IAAkB/G,EAAAA,EAAAA,UAAS,MAGzCgH,EAAoBjB,IACxBgB,GAAeE,GAASA,IAASlB,EAAY,KAAOA,GAAW,EAgCjE,OACEnF,EAAAA,EAAAA,MAAAsG,EAAAA,SAAA,CAAAnG,SAAA,EACEH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAeC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,GAAgBC,SAAC,WAChCH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAcC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,UAAQH,UAAWC,GAAgBoD,QAlCnBiD,KACtBP,GAAgBK,IACd,MAAMG,EAAoB,IAATH,EAAa,GAAKA,EAAO,EAG1C,OAFa,IAATA,GAAYR,GAAeY,GAAQA,EAAO,IAC9CC,QAAQC,IAAI,kBAAmBH,EAAU,QAASZ,GAC3CY,CAAQ,GACf,EA4BgErG,UAC1DC,EAAAA,EAAAA,KAACwG,GAAAA,IAAc,OAEjBxG,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,GAAUC,SACrB,IAAIwC,KAAKiD,EAAaG,GAAcc,eAAe,QAAS,CAC3DC,MAAO,YAGX1G,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,GAASC,SAAEyF,IACxBA,GAAc,IAAIjD,MAAOmD,eACzBF,KAAgB,IAAIjD,MAAOmD,eAC1BC,GAAe,IAAIpD,MAAOsD,YAC1B7F,EAAAA,EAAAA,KAAA,UAAQH,UAAWC,GAAgBoD,QArCrByD,KACtBf,GAAgBK,IACd,MAAMG,EAAoB,KAATH,EAAc,EAAIA,EAAO,EAG1C,OAFa,KAATA,GAAaR,GAAeY,GAAQA,EAAO,IAC/CC,QAAQC,IAAI,cAAeH,EAAU,QAASZ,GACvCY,CAAQ,GACf,EA+BkErG,UAC1DC,EAAAA,EAAAA,KAAC4G,GAAAA,IAAiB,OAGpB5G,EAAAA,EAAAA,KAAA,OAAKoE,MAAO,CAAEG,MAAO,iBAK3BvE,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,GAAsBC,UACpCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,GAAiBC,UAC/BC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,GAAaC,SACzBwF,EAAiBsB,OAAS,GACzBtB,EAAiBuB,KAAI5B,IACnBlF,EAAAA,EAAAA,KAAA,MAAIH,UAAU,cAAaE,UACzBC,EAAAA,EAAAA,KAAC8E,GAAY,CACXC,UAAWG,EACXF,cAAegB,EACff,SAAUa,IAAgBZ,KAJGA,EAAI6B,eAW9C,EC5FP,GAA2B,+BAA3B,GAAiE,2BAAjE,GAAqG,6BAArG,GAAyI,2BAAzI,GAAiL,iCAAjL,GAAiO,mCAAjO,GAA+Q,+BAA/Q,GAA2T,iCCA3T,GAA4B,+BAA5B,GAAuE,+BAAvE,GAAkH,+BAAlH,GAA8J,gCAA9J,GAAoQ,kCCqBpQ,GAnBoBvI,IAA6B,IAA5B,SAAEwI,EAAQ,SAAEC,GAAUzI,EAEzC,OACEoB,EAAAA,EAAAA,MAAA,OAAKC,UAAWqH,GAAiBnH,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,KAAGH,UAAWqH,GAAkBnH,SAAC,gDAGjCH,EAAAA,EAAAA,MAAA,OAAKC,UAAWqH,GAAoBnH,SAAA,EAClCC,EAAAA,EAAAA,KAAA,UAAQH,UAAWqH,GAAkBhE,QAAS8D,EAASjH,SAAC,YAGxDC,EAAAA,EAAAA,KAAA,UAAQH,UAAWqH,GAAkBhE,QAAS+D,EAASlH,SAAC,gBAItD,ECjBV,IAAgB,aAAe,qCAAqC,aAAe,qCAAqC,gBAAkB,wCAAwC,gBAAkB,wCAAwC,WAAa,mCAAmC,cAAgB,sCAAsC,SAAW,iCAAiC,YAAc,oCAAoC,YAAc,oCAAoC,OAAS,+BAA+B,QAAU,gCAAgC,UAAY,kCAAkC,YAAc,oCAAoC,mBAAqB,2CAA2C,UAAY,kCAAkC,UAAY,kCAAkC,cAAgB,sCAAsC,OAAS,gCCM/2B,SAASoH,GAAQC,GACf,MAAOC,GAASD,EAAKE,MAAM,KAAKR,IAAIS,QACpC,OAAOF,GAAS,GAAK,KAAO,IAC9B,CAkBA,MAAMG,GAAsBA,KAC1B,MAAMC,EAAU,GAChB,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACtB,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAAG,CAC9B,MAAMC,EAAOF,EAAI,GAAK,IAAIA,IAAMA,EAC1BG,EAASF,EAAI,GAAK,IAAIA,IAAMA,EAClCF,EAAQK,KAAK,GAAGF,KAAQC,IAC1B,CAEF,OAAOJ,CAAO,EAwJhB,GArJuBjJ,IAAgD,IAA/C,MAAE6E,EAAQ,GAAE,OAAE3E,EAAM,kBAAEqJ,GAAmBvJ,EAC/D,MAAMwJ,GAAqBpJ,EAAAA,EAAAA,IAAYmE,GACjCkF,EAAqBF,EAAoBA,EAAkBG,OAAS,EACpEC,EAAcJ,EAAoBA,EAAkBX,KA/B5D,WACE,MAAM5E,EAAO,IAAID,KACjB,IAAI6F,EAA8C,EAApCtE,KAAKuE,MAAM7F,EAAK8F,aAAe,GAG7B,KAAZF,IACFA,EAAU,EACV5F,EAAK+F,SAAS/F,EAAKgG,WAAa,IAGlC,MAAMnB,EAAQ7E,EAAKgG,WACnB,MAAO,GAAGnB,EAAQ,GAAK,IAAIA,IAAUA,KACnCe,EAAU,GAAK,IAAIA,IAAYA,GAEnC,CAiBmEK,GAEjE,OACEzI,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbwI,YAAaT,EACbU,aAAcR,GAEhBhI,SAAUC,IAER,MAAMwI,EAAc,IAAIrG,MAGjB8E,EAAOe,GAAWhI,EAAOuI,aAAarB,MAAM,KAAKR,IAAIS,QAG5DqB,EAAYL,SAASlB,EAAOe,EAAS,EAAG,GAGxC,MAAMS,EAAgB,GAAGD,EAAYlD,iBAAiBoD,OACpDF,EAAY/C,WAAa,GACzBkD,SAAS,EAAG,QAAQD,OAAOF,EAAYI,WAAWD,SAClD,EACA,QACGD,OAAOzB,GAAO0B,SAAS,EAAG,QAAQD,OAAOV,GAASW,SACrD,EACA,OAIIE,EAAa,CACjBrH,UAAWoG,EACXE,OAAQ9H,EAAOsI,YACflG,KAAMqG,GAIRnK,EAAOuK,EAAW,EAClBlJ,SAEDmJ,IAAA,IAAC,OAAE9I,EAAM,cAAE+I,GAAeD,EAAA,OACzBtJ,EAAAA,EAAAA,MAACS,EAAAA,GAAI,CAACR,UAAWC,GAAAA,aAAiBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,GAAAA,aAAiBC,SAC9BgI,IACCnI,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAAA,mBAAuBC,SAAA,EACrCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,GAAAA,UAAeyE,MAAM,KAAKC,OAAO,KAAIzE,UACnDC,EAAAA,EAAAA,KAAA,OAAKyE,KAAM,GAAG2E,EAAAA,oBAEhBxJ,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,GAAAA,UAAcC,SAAA,CAC5BgI,EAAkBG,OAAO,UAE5BtI,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,GAAAA,cAAkBC,SAAA,CAChCgI,EAAkBX,KAAM,IACxBD,GAAQY,EAAkBX,eAMnCxH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAAA,YAAgBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SAAOM,KAAK,SAASC,KAAK,eAC1BP,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,GAAAA,MAAUC,SAAEsD,KAC3BrD,EAAAA,EAAAA,KAAA,SAAAD,SAAO,sBACPH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAAA,UAAcC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,UACEM,KAAK,SACLT,UAAWC,GAAAA,YACXoD,QAASA,KACP,MAAMmG,EAAYvF,KAAKK,IAAI,EAAG/D,EAAOsI,YAAc,IACnDS,EAAc,cAAeE,EAAU,EACvCtJ,SACH,OAGDH,EAAAA,EAAAA,MAAA,QAAAG,SAAA,CAAOK,EAAOsI,YAAY,UAC1B1I,EAAAA,EAAAA,KAAA,UACEM,KAAK,SACLT,UAAWC,GAAAA,YACXoD,QAASA,KACP,MAAMmG,EAAYvF,KAAKI,IAAI,IAAM9D,EAAOsI,YAAc,IACtDS,EAAc,cAAeE,EAAU,EACvCtJ,SACH,UAIHC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,qBACPC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,GAAAA,gBAAoBC,UAClCC,EAAAA,EAAAA,KAACiB,EAAAA,GAAK,CAACqI,GAAG,SAAS/I,KAAK,eAAcR,SACnCyH,KAAsBV,KAAI,CAACM,EAAMmC,KAChCvJ,EAAAA,EAAAA,KAAA,UAAoBQ,MAAO4G,EAAKrH,SAC7BqH,GADUmC,UAMnBvJ,EAAAA,EAAAA,KAAA,SAAOH,UAAWC,GAAAA,SAAaC,SAAC,wCAGhCC,EAAAA,EAAAA,KAACiB,EAAAA,GAAK,CACJX,KAAK,SACLC,KAAK,cACLV,UAAWC,GAAAA,WACXoE,IAAK,EACLC,IAAK,IACLqF,QAAS7I,IACgB,MAAnBA,EAAEC,OAAOJ,OACX2I,EAAc,cAAe,GAC/B,EAEFzI,SAAUC,IACR,IAAIH,EAAQG,EAAEC,OAAOJ,MAGP,KAAVA,GAMJA,EAAQsD,KAAKK,IAAI,EAAGL,KAAKI,IAAI,IAAMqD,OAAO/G,KAE1C2I,EAAc,cAAe3I,IAP3B2I,EAAc,cAAe,GAOI,QAKzCvJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAAA,aAAiBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,GAAAA,cAAkBC,UAChCH,EAAAA,EAAAA,MAAA,QAAAG,SAAA,CAAOK,EAAOsI,YAAY,YAE5B1I,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,UACEM,KAAK,SACLT,UAAW,GAAGC,GAAAA,YAAgBA,GAAAA,kBAAsBC,SACrD,gBAKA,GAEF,EC7KE,SAAS0J,GAAYjL,GAAe,IAAd,QAAEkL,GAASlL,EAC9C,MAAM,IAAEmL,EAAG,OAAEzB,EAAM,KAAE1F,GAASkH,GAAW,CAAC,EAEpCtC,EAAO5E,EAAOA,EAAK8E,MAAM,KAAK,GAAK,qBAElCsC,EAAaC,IAAkB7K,EAAAA,EAAAA,WAAS,IACxC8K,EAAiBC,IAAsB/K,EAAAA,EAAAA,WAAS,GACjD4D,GAAWC,EAAAA,EAAAA,MAMXmH,EAAmBA,KACvBH,GAAe,EAAM,EAOjBI,EAAiBA,KACrBF,GAAmB,EAAM,EAa3B,OACEnK,EAAAA,EAAAA,MAAA,OAAKC,UAAWqH,GAAgBnH,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWqH,GAAa3C,MAAM,KAAKC,OAAO,KAAIzE,UACjDC,EAAAA,EAAAA,KAAA,OAAKyE,KAAM,GAAGyF,EAAAA,oBAEhBtK,EAAAA,EAAAA,MAAA,KAAGC,UAAWqH,GAAcnH,SAAA,CAAEmI,EAAO,UACrClI,EAAAA,EAAAA,KAAA,KAAGH,UAAWqH,GAAYnH,SAAEqH,KAE5BpH,EAAAA,EAAAA,KAAA,UACEH,UAAWqH,GACX,aAAW,OACXhE,QA7BgBiH,KACpBJ,GAAmB,EAAK,EA4BGhK,UAEvBC,EAAAA,EAAAA,KAAA,OAAKH,UAAWqH,GAAiB3C,MAAM,KAAKC,OAAO,KAAIzE,UACrDC,EAAAA,EAAAA,KAAA,OAAKyE,KAAM,GAAGyF,EAAAA,uBAIlBlK,EAAAA,EAAAA,KAAA,UACEH,UAAWqH,GACX,aAAW,SACXhE,QA/CkBkH,KACtBP,GAAe,EAAK,EA8CS9J,UAEzBC,EAAAA,EAAAA,KAAA,OAAKH,UAAWqH,GAAmB3C,MAAM,KAAKC,OAAO,KAAIzE,UACvDC,EAAAA,EAAAA,KAAA,OAAKyE,KAAM,GAAGyF,EAAAA,qBAIjBN,IACC5J,EAAAA,EAAAA,KAACoD,EAAAA,EAAK,CAACC,MAAM,eAAe5E,QAASuL,EAAiBjK,UACpDC,EAAAA,EAAAA,KAACqK,GAAgB,CACfrD,SAAUgD,EACV/C,SAAUA,KAAMqD,OA1CLC,EA0CkBZ,EAzCrC/G,GAAS4H,EAAAA,EAAAA,IAAkBD,SAC3BP,IAFmBO,KA0CwB,MAIxCT,IACC9J,EAAAA,EAAAA,KAACoD,EAAAA,EAAK,CACJC,MAAM,mCACN5E,QAASwL,EAAelK,UAExBC,EAAAA,EAAAA,KAACyK,GAAc,CACbpH,MAAM,wBACN3E,OAAS0B,IAAWsK,OAhDVH,EAgDqBZ,EAhDZgB,EAgDiBvK,EA/C5CwC,GAASgI,EAAAA,EAAAA,IAAkB,CAAE3G,GAAIsG,EAASM,YAAaF,UACvDV,IAFiBS,IAACH,EAASI,CAgDyB,EAC5C5C,kBAAmB,CACjBG,SACAd,cAOd,CCnGA,UAAgB,SAAW,iCAAiC,cAAgB,sCAAsC,gBAAkB,yCCMrH,SAAS0D,KACtB,MAAMC,GAAkBnM,EAAAA,EAAAA,IAAYmE,GAEpC,OACE/C,EAAAA,EAAAA,KAAA,OAAKH,UAAW,GAAGqH,GAAAA,iBAAwBA,GAAAA,iBAAwBnH,UACjEC,EAAAA,EAAAA,KAAA,OAAKH,UAAWqH,GAAAA,gBAAuBnH,UACrCC,EAAAA,EAAAA,KAAA,MAAIH,UAAWqH,GAAAA,UAAiBnH,SAC7BgL,EAAgBjE,KAAI,CAACkE,EAAMzB,KAC1BvJ,EAAAA,EAAAA,KAAA,MAAIH,UAAWqH,GAAAA,UAAiBnH,UAC9BC,EAAAA,EAAAA,KAACyJ,GAAY,CAACC,QAASsB,KADa,GAAGA,EAAKrB,OAAOJ,YAQjE,C,eCtBA,UAAgB,UAAY,yCAAyC,UAAY,yCAAyC,UAAY,yCAAyC,mBAAqB,kDAAkD,KAAO,oCAAoC,UAAY,yCAAyC,QAAU,uCAAuC,eAAiB,8CAA8C,gBAAkB,gDCkExd,GA1D8B/K,IAAoB,IAAnB,UAAE2E,GAAW3E,EAC1C,MAAMyM,GAAiBrM,EAAAA,EAAAA,IAAYgF,GAC7BsH,GAAetM,EAAAA,EAAAA,IAAYgF,GAC3BuH,GAAavM,EAAAA,EAAAA,IAAYgF,IAA0C,GACnE5B,GACJpD,EAAAA,EAAAA,IAAYgF,IAA0C,GAClD2B,GAAqC,OAAlBvD,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoB2I,OAAQ,GAErD,OACE/K,EAAAA,EAAAA,MAAA,OAAKC,UAAWqH,GAAAA,UAAiBnH,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAIH,UAAWqH,GAAAA,UAAiBnH,SAAC,WACjCH,EAAAA,EAAAA,MAAA,OAAKC,UAAWqH,GAAAA,UAAiBnH,SAAA,CAC9BkL,IAAkBjL,EAAAA,EAAAA,KAACoL,GAAAA,EAAO,KACzBH,GAAkBC,IAClBlL,EAAAA,EAAAA,KAAA,OAAKH,UAAWqH,GAAAA,MAAanH,SAAC,8BAE9BkL,IAAmBC,IACnBlL,EAAAA,EAAAA,KAAAkG,EAAAA,SAAA,CAAAnG,SACGoL,EAAWtE,OAAS,GACnBjH,EAAAA,EAAAA,MAAAsG,EAAAA,SAAA,CAAAnG,SAAA,EACEC,EAAAA,EAAAA,KAAC8K,GAAc,CAAC3H,UAAWA,KAC3BnD,EAAAA,EAAAA,KAAA,OAAKH,UAAWqH,GAAAA,mBAA0BnH,UACxCH,EAAAA,EAAAA,MAAA,UAAQC,UAAWqH,GAAAA,UAAkBhE,QAASC,EAAUpD,SAAA,EACtDC,EAAAA,EAAAA,KAAA,OAAKH,UAAWqH,GAAAA,KAAa3C,MAAM,KAAKC,OAAO,KAAIzE,UACjDC,EAAAA,EAAAA,KAAA,OAAKyE,KAAM,GAAG4G,EAAAA,mBAEhBrL,EAAAA,EAAAA,KAAA,QAAMH,UAAWqH,GAAAA,QAAenH,SAAC,uBAKvCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWqH,GAAAA,eAAsBnH,UACpCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWqH,GAAAA,mBAA0BnH,UACxCH,EAAAA,EAAAA,MAAA,UAAQC,UAAWqH,GAAAA,UAAkBhE,QAASC,EAAUpD,SAAA,EACtDC,EAAAA,EAAAA,KAAA,OAAKH,UAAWqH,GAAAA,KAAa3C,MAAM,KAAKC,OAAO,KAAIzE,UACjDC,EAAAA,EAAAA,KAAA,OAAKyE,KAAM,GAAG4G,EAAAA,mBAEhBrL,EAAAA,EAAAA,KAAA,QAAMH,UAAWqH,GAAAA,QAAenH,SAAC,2BAQ/CH,EAAAA,EAAAA,MAAA,OAAKC,UAAWqH,GAAAA,SAAgBnH,SAAA,CAC7BkL,IAAkBjL,EAAAA,EAAAA,KAACoL,GAAAA,EAAO,KACzBH,GAAkBC,IAClBlL,EAAAA,EAAAA,KAAA,OAAKH,UAAWqH,GAAAA,MAAanH,SAAC,8BAE9BkL,IAAmBC,GAAgB3F,EAAiBsB,OAAS,IAC7D7G,EAAAA,EAAAA,KAACsL,GAAe,CAAC/F,iBAAkBA,SAGnC,ECtCK,SAASgG,KACtB,MAAM9J,EAAQ,IAAIc,KACZ8D,EAAO5E,EAAMiE,cACbgB,EAAQjF,EAAMoE,WAAa,EAC3B2F,GAAkB5M,EAAAA,EAAAA,IAAYmE,EAAAA,IAC9B0I,GAAgB7M,EAAAA,EAAAA,IAAYmE,EAAAA,IAE5BH,GAAWC,EAAAA,EAAAA,OAEjBtD,EAAAA,EAAAA,YAAU,KACRqD,GAAS8I,EAAAA,EAAAA,OACT9I,GAAS+I,EAAAA,EAAAA,IAA6B,CAAEtF,OAAMK,UAAS,GACtD,CAAC9D,EAAUyD,EAAMK,IAEpB,MAAMkF,GAAiBxG,EAAAA,GAAAA,GAAKtF,GAAAA,cAAmBA,GAAAA,gBACzC+L,GAAezG,EAAAA,GAAAA,GAAK,gBAAiBtF,GAAAA,YAGpC4C,EAAaC,IAAkB3D,EAAAA,EAAAA,WAAS,GAEzC8M,EAAcC,GAAgB,KAClCA,GAAa9F,IAASA,GAAK,EAGvB+F,EAAarB,IACjBmB,EAAYnJ,EAAZmJ,GACAlJ,GAASqJ,EAAAA,EAAAA,IAAetB,GAAM,EAchC,OACE/K,EAAAA,EAAAA,MAAA,WAASqE,GAAG,WAAWpE,UAAW+L,EAAe7L,SAAA,EAC/CH,EAAAA,EAAAA,MAAA,OAAKC,UAAWgM,EAAa9L,SAAA,EAC3BH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAAA,IAAQC,SAAA,EACtBH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAAA,WAAeC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,GAAAA,MAAUC,SAAC,cAC1BC,EAAAA,EAAAA,KAACyC,EAAU,KACX7C,EAAAA,EAAAA,MAAA,WAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,UACEkM,OAAQ,GAAGC,UAAoBC,QAC/BC,MAAM,yBAERrM,EAAAA,EAAAA,KAAA,UACEkM,OAAQ,GAAGI,UAAqBC,QAChCF,MAAM,gDAERrM,EAAAA,EAAAA,KAAA,UACEkM,OAAQ,k9OAAwBM,QAChCH,MAAM,wBAERrM,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,GAAAA,MAAW2M,IAAKN,GAAcO,IAAI,kBAGpDlB,IAAoBC,IACpBzL,EAAAA,EAAAA,KAAC0D,GAAe,CAACP,UAAW2I,EAAYnJ,SAG1C6I,IAAoBC,IACpBzL,EAAAA,EAAAA,KAAC2M,GAAqB,CAACxJ,UAAW2I,EAAYnJ,QAtChDD,GAEA1C,EAAAA,EAAAA,KAACoD,EAAAA,EAAK,CAACC,MAAM,YAAY5E,QAASqN,EAAYnJ,GAAgB5C,UAC5DC,EAAAA,EAAAA,KAACyK,GAAc,CAACpH,MAAM,kBAAkB3E,OAAQsN,MAI/C,OAqCX,C","sources":["webpack://react-homework-template/./src/components/DailyNormaModal/DailyNormaModal.module.css?cfa8","components/DailyNormaModal/DailyNormaModal.jsx","webpack://react-homework-template/./src/components/DailyNorma/DailyNorma.module.css?8e40","redux/water/selectors.js","components/DailyNorma/DailyNorma.jsx","webpack://react-homework-template/./src/components/WaterRatioPanel/WaterRatioPanel.module.css?a6e9","components/WaterRatioPanel/WaterRatioPanel.jsx","webpack://react-homework-template/./src/pages/HomePage/HomePage.module.css?5baa","webpack://react-homework-template/./src/components/MonthStatsTable/MonthStatsTable.module.css?b2ab","webpack://react-homework-template/./src/components/CalendarItem/CalendarItem.module.css?a1ae","webpack://react-homework-template/./src/components/DaysGeneralStats/DaysGeneralStats.module.css?b64d","components/DaysGeneralStats/DaysGeneralStats.jsx","components/CalendarItem/CalendarItem.jsx","components/MonthStatsTable/MonthStatsTable.jsx","webpack://react-homework-template/./src/components/TodayWaterList/WaterListRow/WaterListRow.module.css?9668","webpack://react-homework-template/./src/components/TodayWaterList/DeleteEntry/DeleteEntry.module.css?98a2","components/TodayWaterList/DeleteEntry/DeleteEntry.jsx","webpack://react-homework-template/./src/components/TodayListModal/TodayListModal.module.css?a26b","components/TodayListModal/TodayListModal.jsx","components/TodayWaterList/WaterListRow/WaterListRow.jsx","webpack://react-homework-template/./src/components/TodayWaterList/TodayWaterList.module.css?0bc6","components/TodayWaterList/TodayWaterList.jsx","webpack://react-homework-template/./src/components/WaterListWithCalendar/WaterListWithCalendar.module.css?8ddb","components/WaterListWithCalendar/WaterListWithCalendar.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalContent\":\"DailyNormaModal_modalContent__KvIF8\",\"textBlue\":\"DailyNormaModal_textBlue__kszgp\",\"formulaWrap\":\"DailyNormaModal_formulaWrap__JpCCc\",\"formulaLabel\":\"DailyNormaModal_formulaLabel__X95Cr\",\"descriptionContainer\":\"DailyNormaModal_descriptionContainer__D4qCO\",\"descriptionText\":\"DailyNormaModal_descriptionText__h1r-I\",\"calcutatorTitle\":\"DailyNormaModal_calcutatorTitle__fqA7i\",\"btnSave\":\"DailyNormaModal_btnSave__WLCXD\",\"errorMessage\":\"DailyNormaModal_errorMessage__QTBo8\",\"genderWrapper\":\"DailyNormaModal_genderWrapper__2zLey\",\"genderLabel\":\"DailyNormaModal_genderLabel__vGM2B\",\"fieldLabel\":\"DailyNormaModal_fieldLabel__mDK15\",\"resultLabel\":\"DailyNormaModal_resultLabel__tGSwD\",\"genderInput\":\"DailyNormaModal_genderInput__aQI6T\",\"fieldWrapper\":\"DailyNormaModal_fieldWrapper__hW7+t\",\"resultWrapper\":\"DailyNormaModal_resultWrapper__qaB5c\",\"fieldInput\":\"DailyNormaModal_fieldInput__ARcOw\",\"resultInput\":\"DailyNormaModal_resultInput__muC8R\"};","import { useEffect, useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport css from './DailyNormaModal.module.css';\nimport { selectUserGender } from '../../redux/auth/selectors';\nimport { useSelector } from 'react-redux';\n\n// Calculation function\nconst calculateWaterNorma = (gender, weight, activityTime) => {\n  const M = parseFloat(weight) || 0;\n  const T = parseFloat(activityTime) || 0;\n  return gender === 'woman' ? M * 0.03 + T * 0.4 : M * 0.04 + T * 0.6;\n};\n\n// Form validation schema\nconst validationSchema = Yup.object().shape({\n  waterToDrink: Yup.number().required('Enter how much water you will drink'),\n});\n\nexport default function DailyNormaModal({ onClose, onSave }) {\n  const userGender = useSelector(selectUserGender);\n  const [gender, setGender] = useState(userGender || 'woman');\n  const [weight, setWeight] = useState(0);\n  const [activityTime, setActivityTime] = useState(0);\n  const [waterResult, setWaterResult] = useState(0);\n\n  // Recalculate water norm whenever gender, weight, or activityTime changes\n  useEffect(() => {\n    setWaterResult(calculateWaterNorma(gender, weight, activityTime));\n  }, [gender, weight, activityTime]);\n\n  return (\n    <div className={css.modalContent}>\n      <div className={css.formulaWrap}>\n        <p className={css.formulaLabel}>\n          For women: <span className={css.textBlue}>V=(M*0.03) + (T*0.4)</span>\n        </p>\n        <p className={css.formulaLabel}>\n          For men: <span className={css.textBlue}>V=(M*0.04) + (T*0.6)</span>\n        </p>\n      </div>\n      <div className={css.descriptionContainer}>\n        <p className={css.descriptionText}>\n          <span className={css.textBlue}>*</span> V is the volume of water\n          required in liters per day, M is your weight, and T is the duration of\n          intense activity in hours (set to 0 if none).\n        </p>\n      </div>\n\n      <h2 className={css.calcutatorTitle}>Calculate your rate:</h2>\n\n      <Formik\n        initialValues={{ waterToDrink: 0, weight: 0, activityTime: 0 }}\n        validationSchema={validationSchema}\n        onSubmit={values => {\n          onSave(parseFloat(values.waterToDrink));\n          onClose(); // Close modal after saving\n        }}\n      >\n        {() => (\n          <Form>\n            <div className={css.genderWrapper}>\n              <label className={css.genderLabel}>\n                <input\n                  className={css.genderInput}\n                  type=\"radio\"\n                  name=\"gender\"\n                  value=\"woman\"\n                  checked={gender === 'woman'}\n                  onChange={() => setGender('woman')}\n                />\n                For women\n              </label>\n              <label className={css.genderLabel}>\n                <input\n                  className={css.genderInput}\n                  type=\"radio\"\n                  name=\"gender\"\n                  value=\"man\"\n                  checked={gender === 'man'}\n                  onChange={() => setGender('man')}\n                />\n                For men\n              </label>\n            </div>\n\n            <div className={css.fieldWrapper}>\n              <label className={css.fieldLabel}>\n                Your weight in kilograms:\n                <input\n                  className={css.fieldInput}\n                  type=\"number\"\n                  name=\"weight\"\n                  value={weight}\n                  onChange={e => setWeight(e.target.value)}\n                  step=\"0.01\"\n                />\n                <ErrorMessage\n                  name=\"weight\"\n                  component=\"p\"\n                  className={css.errorMessage}\n                />\n              </label>\n            </div>\n\n            <div className={css.fieldWrapper}>\n              <label className={css.fieldLabel}>\n                The time of active participation in hours:\n                <input\n                  className={css.fieldInput}\n                  type=\"number\"\n                  name=\"activityTime\"\n                  value={activityTime}\n                  onChange={e => setActivityTime(e.target.value)}\n                  step=\"0.01\"\n                />\n                <ErrorMessage\n                  name=\"activityTime\"\n                  component=\"p\"\n                  className={css.errorMessage}\n                />\n              </label>\n            </div>\n\n            <p>\n              The required amount of water per day:{' '}\n              <span className={css.textBlue}>{waterResult.toFixed(1)} L</span>\n            </p>\n\n            <div className={css.resultWrapper}>\n              <label className={css.resultLabel}>\n                <h2 className={css.calcutatorTitle}>\n                  Write down how much water you will drink:\n                </h2>\n                <Field\n                  className={css.resultInput}\n                  type=\"number\"\n                  name=\"waterToDrink\"\n                  step=\"0.01\"\n                />\n                <ErrorMessage\n                  name=\"waterToDrink\"\n                  component=\"p\"\n                  className={css.errorMessage}\n                />\n              </label>\n            </div>\n\n            <button className={css.btnSave} type=\"submit\">\n              Save\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"normaContainer\":\"DailyNorma_normaContainer__yAGrT\",\"title\":\"DailyNorma_title__X4SZH\",\"normWater\":\"DailyNorma_normWater__8+Ruh\",\"editBtn\":\"DailyNorma_editBtn__S8zub\"};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectWaterVolumes = state => state.water.volumes;\n\nexport const selectIsLoading = state => state.water.isLoading;\n\nexport const selectError = state => state.water.error;\n\nexport const selectDailyNorm = state => state.water.dailyNorm;\n\nexport const selectTodaysWater = state => state.water.today;\n\nexport const selectTodaysWaterNotes = state => state.water.today.notes;\n\nexport const selectTodaysWaterDailyNorm = state => state.water.today.dailyNorm;\n\nexport const selectTodaysWaterPercentage = state => state.water.today.percentage;\n\nexport const selectTodaysWaterAmount = state => state.water.today.totalAmount;\n\nexport const selectMonthlyWaterData = state => state.water.monthlyConsumption;\n\nexport const selectVisibleWaterNotes = createSelector(\n  [selectTodaysWaterNotes],\n  (notes) => {\n    return notes.slice().sort((a, b) => new Date(a.date) - new Date(b.date));\n  }\n);\n\n","import React, { useState } from 'react';\nimport DailyNormaModal from '../DailyNormaModal/DailyNormaModal.jsx';\nimport css from './DailyNorma.module.css';\nimport Modal from 'components/Modal/Modal.jsx';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as selectors from '../../redux/water/selectors.js';\nimport { updateDailyWaterNorm } from '../../redux/water/operations.js';\n\nexport default function DailyNorma() {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const dispatch = useDispatch();\n  const todaysWaterDailyNorm = useSelector(selectors.selectTodaysWaterDailyNorm);\n  const userWaterNorma = todaysWaterDailyNorm ? todaysWaterDailyNorm / 1000 : '-';\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleSave = (newNorm) => {\n    const ml = newNorm * 1000;\n    dispatch(updateDailyWaterNorm({ dailyNormWater: ml }));\n  };\n\n  return (\n    <div className={css.normaContainer}>\n      <h2 className={css.title}>My daily norma</h2>\n      <div className={css.normWater}>\n        {`${userWaterNorma} L`}\n        <button className={css.editBtn} onClick={openModal}>\n          Edit\n        </button>\n      </div>\n\n      {isModalOpen && (\n        <Modal title=\"My daily norma\" onClose={closeModal}>\n          <DailyNormaModal onClose={closeModal} onSave={handleSave} />\n        </Modal>\n      )}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"WaterRatioPanel_box__T11qP\",\"panelContainer\":\"WaterRatioPanel_panelContainer__vZX7H\",\"label\":\"WaterRatioPanel_label__GUYqK\",\"sliderContainer\":\"WaterRatioPanel_sliderContainer__CR4Xr\",\"slider\":\"WaterRatioPanel_slider__+PTSK\",\"valueContainer\":\"WaterRatioPanel_valueContainer__gRrgy\",\"borderWrapper\":\"WaterRatioPanel_borderWrapper__A7Cc5\",\"afterBefor\":\"WaterRatioPanel_afterBefor__GlH46\",\"percent\":\"WaterRatioPanel_percent__O1bFg\",\"devider\":\"WaterRatioPanel_devider__BDjvE\",\"percentToday\":\"WaterRatioPanel_percentToday__Kzhcz\",\"addWaterButton\":\"WaterRatioPanel_addWaterButton__kqCNJ\",\"icon\":\"WaterRatioPanel_icon__ZAI64\"};","import React from 'react';\nimport icon from '../../assets/images/snippets.svg';\nimport css from './WaterRatioPanel.module.css';\nimport { useSelector } from 'react-redux';\nimport * as waterSelectors from '../../redux/water/selectors';\n\nexport default function WaterRatioPanel({\n  openModal,\n}) {\n  const todaysWaterPercentage = useSelector(\n    waterSelectors.selectTodaysWaterPercentage\n  );\n\n  const waterRatio = Math.floor(todaysWaterPercentage) || 0;\n\n  return (\n    <div className={css.box}>\n      <div className={css.panelContainer}>\n        <div className={css.sliderContainer}>\n          <label className={css.label} htmlFor=\"waterRange\">\n            Today\n          </label>\n          <input\n            type=\"range\"\n            id=\"waterRange\"\n            min=\"0\"\n            max=\"100\"\n            value={waterRatio}\n            className={css.slider}\n            style={{\n              background: `linear-gradient(to right, #9ebbff ${waterRatio}%, #d7e3ff ${waterRatio}%)`,\n            }}\n            readOnly\n          />\n        </div>\n        <div className={css.valueContainer}>\n          <div className={css.borderWrapper}>\n            <div className={css.afterBefor}>\n              <span className={css.devider}>|</span>\n              <span className={css.percent}>0%</span>\n            </div>\n            {waterRatio > 0 && (\n              <div className={css.afterBefor}>\n                <span className={css.devider}>|</span>\n                <span className={`${css.percent} ${css.percentToday}`}>\n                  {waterRatio}%\n                </span>\n              </div>\n            )}\n            <div className={css.afterBefor}>\n              <span className={css.devider}>|</span>\n              <span className={css.percent}>100%</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <button className={css.addWaterButton} onClick={openModal}>\n        <svg className={css.icon} width=\"24\" height=\"24\">\n          <use href={`${icon}#icon-plus-circle`}></use>\n        </svg>\n        Add Water\n      </button>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"HomePage_container__uNu-e\",\"homeContainer\":\"HomePage_homeContainer__6ghGM\",\"pageBackground\":\"HomePage_pageBackground__hiddn\",\"title\":\"HomePage_title__UFLA3\",\"imageModal\":\"HomePage_imageModal__NmJ5u\",\"box\":\"HomePage_box__Vq-hE\"};","// extracted by mini-css-extract-plugin\nexport default {\"calendarContainer\":\"MonthStatsTable_calendarContainer__HR632\",\"containerDay\":\"MonthStatsTable_containerDay__ZMKic\",\"navigation\":\"MonthStatsTable_navigation__fWySF\",\"selectedDay\":\"MonthStatsTable_selectedDay__KoS7B\",\"loadingContainer\":\"MonthStatsTable_loadingContainer__QyIHi\",\"monthYear\":\"MonthStatsTable_monthYear__Rscm4\",\"month\":\"MonthStatsTable_month__q8RdM\",\"year\":\"MonthStatsTable_year__tOvLM\",\"prevButton\":\"MonthStatsTable_prevButton__Mcu34\",\"nextButton\":\"MonthStatsTable_nextButton__+Grzl\",\"daysList\":\"MonthStatsTable_daysList__uEEAv\",\"dayItem\":\"MonthStatsTable_dayItem__lh8AI\",\"calendarDay\":\"MonthStatsTable_calendarDay__AB7l+\",\"percentageText\":\"MonthStatsTable_percentageText__dojsM\"};","// extracted by mini-css-extract-plugin\nexport default {\"dayWrapper\":\"CalendarItem_dayWrapper__RvarJ\",\"dayItem\":\"CalendarItem_dayItem__Ebd9v\",\"lowPercentage\":\"CalendarItem_lowPercentage__irL+D\",\"fullPercentage\":\"CalendarItem_fullPercentage__6G6tv\",\"percentageText\":\"CalendarItem_percentageText__ytSOQ\",\"zeroPercentage\":\"CalendarItem_zeroPercentage__s3tZC\",\"calendarDay\":\"CalendarItem_calendarDay__-8qwF\"};","// extracted by mini-css-extract-plugin\nexport default {\"popup\":\"DaysGeneralStats_popup__B4CHa\",\"popupContent\":\"DaysGeneralStats_popupContent__UvZ+k\",\"title\":\"DaysGeneralStats_title__g7S8J\",\"text\":\"DaysGeneralStats_text__Fcz5z\",\"span\":\"DaysGeneralStats_span__QjKNe\"};","import React from 'react';\nimport css from './DaysGeneralStats.module.css';\n\nconst DaysGeneralStats = ({ selectedDayData }) => {\n  const { date, dailyNorm, percentage, consumptionCount } = selectedDayData;\n  const floorPercentage = Math.floor(percentage);\n\n  return (\n    <div className={css.popup}>\n      <div className={css.popupContent}>\n        <h3 className={css.title}>{date}</h3>\n        <p className={css.text}>\n          Daily norma: <span className={css.span}>{dailyNorm / 1000} L</span>\n        </p>\n        <p className={css.text}>\n          Fulfillment of the daily norm:{' '}\n          <span className={css.span}>{floorPercentage}%</span>\n        </p>\n        <p className={css.text}>\n          How many servings of water:{' '}\n          <span className={css.span}>{consumptionCount}</span>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default DaysGeneralStats;\n","import css from './CalendarItem.module.css';\nimport clsx from 'clsx';\nimport DaysGeneralStats from 'components/DaysGeneralStats/DaysGeneralStats';\n\nexport default function CalendarItem({ dayObject, onPopupToggle, isActive }) {\n  const { day, percentage } = dayObject;\n  const floorPercentage = Math.floor(percentage);\n  const circleClass = clsx(css.dayItem, {\n    [css.lowPercentage]: floorPercentage > 0 && floorPercentage < 100,\n    [css.fullPercentage]: floorPercentage >= 100,\n    [css.zeroPercentage]: floorPercentage === 0,\n  });\n\n  return (\n    <div className={css.dayWrapper} onClick={() => onPopupToggle(dayObject)}>\n      <div className={circleClass}>\n        <p className={css.calendarDay}>{day}</p>\n      </div>\n      <p className={css.percentageText}>{floorPercentage}%</p>\n\n      {isActive && (\n        <div\n          className='popup'\n          onClick={e => e.stopPropagation()}\n        >\n          <DaysGeneralStats selectedDayData={dayObject} />\n        </div>\n      )}\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { IoIosArrowForward, IoIosArrowBack } from 'react-icons/io';\nimport css from './MonthStatsTable.module.css';\n// import { useDispatch } from 'react-redux';\n// import { fetchMonthlyWaterConsumption } from '../../redux/water/operations';\n\n// import DaysGeneralStats from '../DaysGeneralStats/DaysGeneralStats';\nimport CalendarItem from '../CalendarItem/CalendarItem';\n\nconst MonthStatsTable = ({ monthlyWaterlist }) => {\n  // const dispatch = useDispatch();\n  const date = new Date();\n\n  const [currentYear, setCurrentYear] = useState(date.getFullYear());\n  const [currentMonth, setCurrentMonth] = useState(date.getMonth()+1);\n  const [activePopup, setActivePopup] = useState(null);\n  // const [fetched, setFetched] = useState(false);\n\n  const handlePopupToggle = dayObject => {\n    setActivePopup(prev => (prev === dayObject ? null : dayObject));\n  };\n\n  const handlePrevMonth = () => {\n    setCurrentMonth(prev => {\n      const newMonth = prev === 0 ? 11 : prev - 1;\n      if (prev === 0) setCurrentYear(year => year - 1);\n      console.log('Previous month:', newMonth, 'Year:', currentYear);\n      return newMonth;\n    });\n  };\n\n  const handleNextMonth = () => {\n    setCurrentMonth(prev => {\n      const newMonth = prev === 11 ? 0 : prev + 1;\n      if (prev === 11) setCurrentYear(year => year + 1);\n      console.log('Next month:', newMonth, 'Year:', currentYear);\n      return newMonth;\n    });\n  };\n\n  // useEffect(() => {\n  //   const dataExists =\n  //     monthlyWaterlist?.year === currentYear &&\n  //     monthlyWaterlist?.month === currentMonth;\n\n  //   if (!dataExists) {\n  //     console.log(\"Fetching data for year:\", currentYear, \"month:\", currentMonth);\n  //     dispatch(fetchMonthlyWaterConsumption({ year: currentYear, month: currentMonth }));\n  //   }\n  // }, [dispatch, currentYear, currentMonth, monthlyWaterlist]);\n\n  return (\n    <>\n      <div className={css.navigation}>\n        <h3 className={css.selectedDay}>Month</h3>\n        <div className={css.monthYear}>\n          <button className={css.prevButton} onClick={handlePrevMonth}>\n            <IoIosArrowBack />\n          </button>\n          <p className={css.month}>\n            {new Date(currentYear, currentMonth).toLocaleString('en-US', {\n              month: 'long',\n            })}\n          </p>\n          <p className={css.year}>{currentYear}</p>\n          {currentYear < new Date().getFullYear() ||\n          (currentYear === new Date().getFullYear() &&\n            currentMonth < new Date().getMonth()) ? (\n            <button className={css.nextButton} onClick={handleNextMonth}>\n              <IoIosArrowForward />\n            </button>\n          ) : (\n            <div style={{ width: '14px' }}></div>\n          )}\n        </div>\n      </div>\n\n      <div className={css.calendarContainer}>\n        <div className={css.containerDay}>\n          <ul className={css.daysList}>\n            {monthlyWaterlist.length > 0 &&\n              monthlyWaterlist.map(day => (\n                <li className=\"itemWrapper\" key={day.key}>\n                  <CalendarItem\n                    dayObject={day}\n                    onPopupToggle={handlePopupToggle}\n                    isActive={activePopup === day}\n                  />\n                </li>\n              ))}\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MonthStatsTable;\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"WaterListRow_listItem__Rqg7k\",\"icon\":\"WaterListRow_icon__840Ty\",\"volume\":\"WaterListRow_volume__QFv6s\",\"time\":\"WaterListRow_time__wsOxW\",\"editButton\":\"WaterListRow_editButton__xrjVE\",\"deleteButton\":\"WaterListRow_deleteButton__Wna6o\",\"editIcon\":\"WaterListRow_editIcon__wspvH\",\"deleteIcon\":\"WaterListRow_deleteIcon__SLLS8\"};","// extracted by mini-css-extract-plugin\nexport default {\"modalBody\":\"DeleteEntry_modalBody__y0E3g\",\"deleteBtn\":\"DeleteEntry_deleteBtn__MPHN3\",\"cancelBtn\":\"DeleteEntry_cancelBtn__aS1UJ\",\"textAreYou\":\"DeleteEntry_textAreYou__X1exT\",\"deleteTextEntry\":\"DeleteEntry_deleteTextEntry__qBXUv\",\"btnContainer\":\"DeleteEntry_btnContainer__fXkH8\",\"modalOverlay\":\"DeleteEntry_modalOverlay__pGLCX\",\"modalContent\":\"DeleteEntry_modalContent__ImhMS\",\"modalHeader\":\"DeleteEntry_modalHeader__HO467\",\"modalClose\":\"DeleteEntry_modalClose__f-0kL\"};","import React from 'react';\nimport styles from './DeleteEntry.module.css';\n\nconst DeleteEntry = ({ onCancel, onDelete }) => {\n\n  return (\n    <div className={styles.modalBody}>\n      <p className={styles.textAreYou}>\n        Are you sure you want to delete the entry?\n      </p>\n      <div className={styles.btnContainer}>\n        <button className={styles.cancelBtn} onClick={onCancel}>\n          Cancel\n        </button>\n        <button className={styles.deleteBtn} onClick={onDelete}>\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default DeleteEntry;\n","// extracted by mini-css-extract-plugin\nexport default {\"waterContent\":\"TodayListModal_waterContent__Q2HKr\",\"modalActions\":\"TodayListModal_modalActions__XD6mp\",\"saveButtonStyle\":\"TodayListModal_saveButtonStyle__WmFKC\",\"timeSelectBlock\":\"TodayListModal_timeSelectBlock__BKvGv\",\"waterInput\":\"TodayListModal_waterInput__vmcv-\",\"stepInputDown\":\"TodayListModal_stepInputDown__o5gB6\",\"namValue\":\"TodayListModal_namValue__nTX-5\",\"editSection\":\"TodayListModal_editSection__M27ff\",\"correctData\":\"TodayListModal_correctData__4flHC\",\"wtUsed\":\"TodayListModal_wtUsed__W68Sv\",\"recTime\":\"TodayListModal_recTime__3az5N\",\"stepInput\":\"TodayListModal_stepInput__hmEOW\",\"roundButton\":\"TodayListModal_roundButton__mIzFR\",\"waterInfoContainer\":\"TodayListModal_waterInfoContainer__-rkX7\",\"iconColor\":\"TodayListModal_iconColor__+LpAP\",\"waterLooc\":\"TodayListModal_waterLooc__TYlSN\",\"amPmIndicator\":\"TodayListModal_amPmIndicator__VZCVO\",\"amSide\":\"TodayListModal_amSide__FK380\"};","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { useSelector } from 'react-redux';\nimport * as selectors from '../../redux/water/selectors.js';\nimport css from './TodayListModal.module.css';\nimport snippet from '../../assets/images/snippets.svg';\n\nfunction getAmPm(time) {\n  const [hours] = time.split(':').map(Number);\n  return hours >= 12 ? 'PM' : 'AM';\n}\n\nfunction getCurrentTime() {\n  const date = new Date();\n  let minutes = Math.round(date.getMinutes() / 5) * 5;\n\n  // Check if rounding minutes goes up to 60\n  if (minutes === 60) {\n    minutes = 0; // Reset minutes to 0\n    date.setHours(date.getHours() + 1); // Increment the hour\n  }\n\n  const hours = date.getHours();\n  return `${hours < 10 ? `0${hours}` : hours}:${\n    minutes < 10 ? `0${minutes}` : minutes\n  }`;\n}\n\nconst generateTimeOptions = () => {\n  const options = [];\n  for (let h = 0; h < 24; h++) {\n    for (let m = 0; m < 60; m += 5) {\n      const hour = h < 10 ? `0${h}` : h;\n      const minute = m < 10 ? `0${m}` : m;\n      options.push(`${hour}:${minute}`);\n    }\n  }\n  return options;\n};\n\nconst TodayListModal = ({ title = '', onSave, previousWaterData }) => {\n  const userDailyNormWater = useSelector(selectors.selectTodaysWaterDailyNorm);\n  const initialWaterAmount = previousWaterData ? previousWaterData.amount : 0;\n  const initialTime = previousWaterData ? previousWaterData.time : getCurrentTime();\n\n  return (\n    <Formik\n      initialValues={{\n        waterVolume: initialWaterAmount,\n        selectedTime: initialTime,\n      }}\n      onSubmit={values => {\n        // Get the current date\n        const currentDate = new Date();\n\n        // Split the selected time (HH:mm) into hours and minutes\n        const [hours, minutes] = values.selectedTime.split(':').map(Number);\n\n        // Set the hours and minutes on the current date\n        currentDate.setHours(hours, minutes, 0, 0); // Set hours, minutes, and reset seconds/milliseconds\n\n        // Format date to 'YYYY-MM-DDTHH:mm' in local timezone\n        const formattedDate = `${currentDate.getFullYear()}-${String(\n          currentDate.getMonth() + 1\n        ).padStart(2, '0')}-${String(currentDate.getDate()).padStart(\n          2,\n          '0'\n        )}T${String(hours).padStart(2, '0')}:${String(minutes).padStart(\n          2,\n          '0'\n        )}`;\n\n        // Create the data object to save\n        const dataToSave = {\n          dailyNorm: userDailyNormWater, // Get the daily norm from Redux\n          amount: values.waterVolume,\n          date: formattedDate, // Format date as ISO string in local timezone\n        };\n\n        // Call the onSave function with the data\n        onSave(dataToSave);\n      }}\n    >\n      {({ values, setFieldValue }) => (\n        <Form className={css.waterContent}>\n          <div className={css.previousData}>\n            {previousWaterData && (\n              <div className={css.waterInfoContainer}>\n                <svg className={css.iconColor} width=\"24\" height=\"24\">\n                  <use href={`${snippet}#icon-glass`}></use>\n                </svg>\n                <span className={css.waterLooc}>\n                  {previousWaterData.amount} ml\n                </span>\n                <span className={css.amPmIndicator}>\n                  {previousWaterData.time}{' '}\n                  {getAmPm(previousWaterData.time)}\n                </span>\n              </div>\n            )}\n          </div>\n\n          <div className={css.editSection}>\n            <input type=\"hidden\" name=\"dailyNorm\" />\n            <h3 className={css.title}>{title}</h3>\n            <label>Amount of water:</label>\n            <div className={css.stepInput}>\n              <button\n                type=\"button\"\n                className={css.roundButton}\n                onClick={() => {\n                  const newAmount = Math.max(0, values.waterVolume - 50); // Заборонити значення нижче 0\n                  setFieldValue('waterVolume', newAmount);\n                }}\n              >\n                -\n              </button>\n              <span>{values.waterVolume} ml</span>\n              <button\n                type=\"button\"\n                className={css.roundButton}\n                onClick={() => {\n                  const newAmount = Math.min(5000, values.waterVolume + 50); // Заборонити значення більше 5000\n                  setFieldValue('waterVolume', newAmount);\n                }}\n              >\n                +\n              </button>\n            </div>\n            <label>Recording time:</label>\n            <div className={css.timeSelectBlock}>\n              <Field as=\"select\" name=\"selectedTime\">\n                {generateTimeOptions().map((time, index) => (\n                  <option key={index} value={time}>\n                    {time}\n                  </option>\n                ))}\n              </Field>\n            </div>\n            <label className={css.namValue}>\n              Enter the value of the water used:\n            </label>\n            <Field\n              type=\"number\"\n              name=\"waterVolume\"\n              className={css.waterInput}\n              min={0} // Заборонити від'ємне введення\n              max={5000} // Заборонити значення більше 5000\n              onFocus={e => {\n                if (e.target.value === '0') {\n                  setFieldValue('waterVolume', ''); // Очищати поле при фокусі, якщо значення 0\n                }\n              }}\n              onChange={e => {\n                let value = e.target.value;\n\n                // Дозволити порожнє значення\n                if (value === '') {\n                  setFieldValue('waterVolume', '');\n                  return;\n                }\n\n                // Перевірка на допустимий діапазон\n                value = Math.max(0, Math.min(5000, Number(value)));\n\n                setFieldValue('waterVolume', value);\n              }}\n            />\n          </div>\n\n          <div className={css.modalActions}>\n            <div className={css.stepInputDown}>\n              <span>{values.waterVolume} ml</span>\n            </div>\n            <div>\n              <button\n                type=\"submit\"\n                className={`${css.stepSave} ${css.saveButtonStyle}`}\n              >\n                Save\n              </button>\n            </div>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default TodayListModal;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from './WaterListRow.module.css';\nimport icons from '../../../assets/images/snippets.svg';\nimport Modal from '../../Modal/Modal';\nimport DeleteEntryModal from '../DeleteEntry/DeleteEntry';\nimport TodayListModal from '../../TodayListModal/TodayListModal';\nimport {\n  deleteWaterVolume,\n  updateWaterVolume,\n} from '../../../redux/water/operations';\n\nexport default function WaterListRow({ rowData }) {\n  const { _id, amount, date } = rowData || {};\n\n  const time = date ? date.split('T')[1] : 'No time available';\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [modalEditIsOpen, setModalEditIsOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const openDeleteModal = () => {\n    setModalIsOpen(true);\n  };\n\n  const closeDeleteModal = () => {\n    setModalIsOpen(false);\n  };\n\n  const openEditModal = () => {\n    setModalEditIsOpen(true);\n  };\n\n  const closeEditModal = () => {\n    setModalEditIsOpen(false);\n  };\n\n  const handleDelete = waterId => {\n    dispatch(deleteWaterVolume(waterId));\n    closeDeleteModal();\n  };\n\n  const handleEdit = (waterId, data) => {\n    dispatch(updateWaterVolume({ id: waterId, updatedData: data }));\n    closeEditModal();\n  };\n\n  return (\n    <div className={styles.listItem}>\n      <svg className={styles.icon} width=\"36\" height=\"36\">\n        <use href={`${icons}#icon-glass`} />\n      </svg>\n      <p className={styles.volume}>{amount} ml</p>\n      <p className={styles.time}>{time}</p>\n\n      <button\n        className={styles.editButton}\n        aria-label=\"Edit\"\n        onClick={openEditModal}\n      >\n        <svg className={styles.editIcon} width=\"16\" height=\"16\">\n          <use href={`${icons}#icon-pencil`} />\n        </svg>\n      </button>\n\n      <button\n        className={styles.deleteButton}\n        aria-label=\"Delete\"\n        onClick={openDeleteModal}\n      >\n        <svg className={styles.deleteIcon} width=\"16\" height=\"16\">\n          <use href={`${icons}#icon-trash`} />\n        </svg>\n      </button>\n\n      {modalIsOpen && (\n        <Modal title=\"Delete Entry\" onClose={closeDeleteModal}>\n          <DeleteEntryModal\n            onCancel={closeDeleteModal}\n            onDelete={() => handleDelete(_id)} // Pass function reference\n          />\n        </Modal>\n      )}\n      {modalEditIsOpen && (\n        <Modal\n          title=\"Edit the entered amount of water\"\n          onClose={closeEditModal}\n        >\n          <TodayListModal\n            title=\"Correct entered data:\"\n            onSave={(values) => handleEdit(_id, values)}\n            previousWaterData={{\n              amount,\n              time\n             }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"TodayWaterList_listItem__Nh9Nv\",\"listContainer\":\"TodayWaterList_listContainer__fkpQ-\",\"scrollContainer\":\"TodayWaterList_scrollContainer__lZQxd\"};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport * as selectors from '../../redux/water/selectors.js';\nimport WaterListRow from './WaterListRow/WaterListRow';\n\nimport styles from './TodayWaterList.module.css';\n\nexport default function TodayWaterList() {\n  const todaysWaterList = useSelector(selectors.selectVisibleWaterNotes);\n\n  return (\n    <div className={`${styles.listContainer} ${styles.todayWaterList}`}>\n      <div className={styles.scrollContainer}>\n        <ul className={styles.waterList}>\n          {todaysWaterList.map((note, index) => (\n            <li className={styles.waterItem} key={`${note._id}-${index}`}>\n              <WaterListRow rowData={note} />\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"WaterListWithCalendar_container__ouRwP\",\"todayText\":\"WaterListWithCalendar_todayText__moxdA\",\"waterList\":\"WaterListWithCalendar_waterList__tdKao\",\"addButtonContainer\":\"WaterListWithCalendar_addButtonContainer__LCyKM\",\"icon\":\"WaterListWithCalendar_icon__6YnVk\",\"addButton\":\"WaterListWithCalendar_addButton__7y9iH\",\"addText\":\"WaterListWithCalendar_addText__I9ykQ\",\"emptyContainer\":\"WaterListWithCalendar_emptyContainer__d8ot0\",\"buttonContainer\":\"WaterListWithCalendar_buttonContainer__2mUkk\"};","import { useSelector } from 'react-redux';\nimport * as waterSelectors from '../../redux/water/selectors';\n\nimport MonthStatsTable from '../MonthStatsTable/MonthStatsTable';\nimport TodayWaterList from '../TodayWaterList/TodayWaterList';\nimport Loading from '../Loading/Loading';\nimport snippets from '../../assets/images/snippets.svg';\nimport styles from './WaterListWithCalendar.module.css';\n\nconst WaterListWithCalendar = ({ openModal }) => {\n  const waterIsLoading = useSelector(waterSelectors.selectIsLoading);\n  const waterIsError = useSelector(waterSelectors.selectError);\n  const waterNotes = useSelector(waterSelectors.selectTodaysWaterNotes) || [];\n  const monthlyConsumption =\n    useSelector(waterSelectors.selectMonthlyWaterData) || [];\n  const monthlyWaterlist = monthlyConsumption?.data || [];\n\n  return (\n    <div className={styles.container}>\n      <h2 className={styles.todayText}>Today</h2>\n      <div className={styles.waterList}>\n        {waterIsLoading && <Loading />}\n        {!waterIsLoading && waterIsError && (\n          <div className={styles.error}>Error loading water data</div>\n        )}\n        {!waterIsLoading && !waterIsError && (\n          <>\n            {waterNotes.length > 0 ? (\n              <>\n                <TodayWaterList openModal={openModal} />\n                <div className={styles.addButtonContainer}>\n                  <button className={styles.addButton} onClick={openModal}>\n                    <svg className={styles.icon} width=\"24\" height=\"24\">\n                      <use href={`${snippets}#icon-plus`}></use>\n                    </svg>\n                    <span className={styles.addText}>Add water</span>\n                  </button>\n                </div>\n              </>\n            ) : (\n              <div className={styles.emptyContainer}>\n                <div className={styles.addButtonContainer}>\n                  <button className={styles.addButton} onClick={openModal}>\n                    <svg className={styles.icon} width=\"24\" height=\"24\">\n                      <use href={`${snippets}#icon-plus`}></use>\n                    </svg>\n                    <span className={styles.addText}>Add water</span>\n                  </button>\n                </div>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <div className={styles.calendar}>\n        {waterIsLoading && <Loading />}\n        {!waterIsLoading && waterIsError && (\n          <div className={styles.error}>Error loading water data</div>\n        )}\n        {!waterIsLoading && !waterIsError && monthlyWaterlist.length > 0 && (\n          <MonthStatsTable monthlyWaterlist={monthlyWaterlist} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default WaterListWithCalendar;\n","import React, { useEffect, useState } from 'react';\nimport DailyNorma from '../../components/DailyNorma/DailyNorma.jsx';\nimport WaterRatioPanel from '../../components/WaterRatioPanel/WaterRatioPanel.jsx';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchTodayWaterConsumption,\n  fetchMonthlyWaterConsumption,\n  addWaterVolume,\n} from '../../redux/water/operations';\nimport * as selectors from '../../redux/auth/selectors.js';\n\nimport css from './HomePage.module.css';\n\nimport botleImage1x from '../../assets/images/desktop/botle_home_screen.png';\nimport botleImage2x from '../../assets/images/desktop/botle_home_screen@2x.png';\nimport tabletImage1x from '../../assets/images/tablet/bottle_home_screen_tablet.png';\nimport tabletImage2x from '../../assets/images/tablet/bottle_home_screen_tablet@2x.png';\nimport mobileImage1x from '../../assets/images/mob/bottle_home_screen_mob.png';\nimport mobileImage2x from '../../assets/images/mob/bottle_home_screen_mob@2x.png';\n\nimport WaterListWithCalendar from '../../components/WaterListWithCalendar/WaterListWithCalendar.jsx';\nimport Modal from 'components/Modal/Modal.jsx';\nimport TodayListModal from 'components/TodayListModal/TodayListModal.jsx';\nimport clsx from 'clsx';\n\nexport default function HomePage() {\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = today.getMonth() + 1;\n  const userAuthLoading = useSelector(selectors.selectAuthLoading);\n  const userAuthError = useSelector(selectors.selectAuthError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTodayWaterConsumption());\n    dispatch(fetchMonthlyWaterConsumption({ year, month }));\n  }, [dispatch, year, month]);\n\n  const containerClass = clsx(css.homeContainer, css.pageBackground);\n  const contentClass = clsx('mainContainer', css.container);\n\n  // Modal state and handlers\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const toggleModal = setModalOpen => () => {\n    setModalOpen(prev => !prev);\n  };\n\n  const handleSave = data => {\n    toggleModal(setIsModalOpen)();\n    dispatch(addWaterVolume(data));\n  };\n\n  const renderModal = () => {\n    if (isModalOpen) {\n      return (\n        <Modal title=\"Add Water\" onClose={toggleModal(setIsModalOpen)}>\n          <TodayListModal title=\"Choose a value:\" onSave={handleSave} />\n        </Modal>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <section id=\"homePage\" className={containerClass}>\n      <div className={contentClass}>\n        <div className={css.box}>\n          <div className={css.imageModal}>\n            <h1 className={css.title}>HomePage</h1>\n            <DailyNorma />\n            <picture>\n              <source\n                srcSet={`${botleImage1x} 1x, ${botleImage2x} 2x`}\n                media=\"(min-width: 1440px)\"\n              />\n              <source\n                srcSet={`${tabletImage1x} 1x, ${tabletImage2x} 2x`}\n                media=\"(min-width: 768px) and (max-width: 1439px)\"\n              />\n              <source\n                srcSet={`${mobileImage1x} 1x, ${mobileImage2x} 2x`}\n                media=\"(max-width: 767px)\"\n              />\n              <img className={css.photo} src={botleImage1x} alt=\"Bottle\" />\n            </picture>\n          </div>\n          {!userAuthLoading && !userAuthError && (\n            <WaterRatioPanel openModal={toggleModal(setIsModalOpen)} />\n          )}\n        </div>\n        {!userAuthLoading && !userAuthError && (\n          <WaterListWithCalendar openModal={toggleModal(setIsModalOpen)} />\n        )}\n      </div>\n      {renderModal()}\n    </section>\n  );\n}\n"],"names":["validationSchema","Yup","shape","waterToDrink","required","DailyNormaModal","_ref","onClose","onSave","userGender","useSelector","selectUserGender","gender","setGender","useState","weight","setWeight","activityTime","setActivityTime","waterResult","setWaterResult","useEffect","calculateWaterNorma","M","parseFloat","T","_jsxs","className","css","children","_jsx","Formik","initialValues","onSubmit","values","Form","type","name","value","checked","onChange","e","target","step","ErrorMessage","component","toFixed","Field","selectIsLoading","state","water","isLoading","selectError","error","selectTodaysWaterNotes","today","notes","selectTodaysWaterDailyNorm","dailyNorm","selectTodaysWaterPercentage","percentage","selectMonthlyWaterData","monthlyConsumption","selectVisibleWaterNotes","createSelector","slice","sort","a","b","Date","date","DailyNorma","isModalOpen","setIsModalOpen","dispatch","useDispatch","todaysWaterDailyNorm","selectors","userWaterNorma","closeModal","onClick","openModal","Modal","title","newNorm","ml","updateDailyWaterNorm","dailyNormWater","WaterRatioPanel","todaysWaterPercentage","waterSelectors","waterRatio","Math","floor","htmlFor","id","min","max","style","background","readOnly","width","height","href","icon","selectedDayData","consumptionCount","floorPercentage","CalendarItem","dayObject","onPopupToggle","isActive","day","circleClass","clsx","stopPropagation","DaysGeneralStats","monthlyWaterlist","currentYear","setCurrentYear","getFullYear","currentMonth","setCurrentMonth","getMonth","activePopup","setActivePopup","handlePopupToggle","prev","_Fragment","handlePrevMonth","newMonth","year","console","log","IoIosArrowBack","toLocaleString","month","handleNextMonth","IoIosArrowForward","length","map","key","onCancel","onDelete","styles","getAmPm","time","hours","split","Number","generateTimeOptions","options","h","m","hour","minute","push","previousWaterData","userDailyNormWater","initialWaterAmount","amount","initialTime","minutes","round","getMinutes","setHours","getHours","getCurrentTime","waterVolume","selectedTime","currentDate","formattedDate","String","padStart","getDate","dataToSave","_ref2","setFieldValue","snippet","newAmount","as","index","onFocus","WaterListRow","rowData","_id","modalIsOpen","setModalIsOpen","modalEditIsOpen","setModalEditIsOpen","closeDeleteModal","closeEditModal","icons","openEditModal","openDeleteModal","DeleteEntryModal","handleDelete","waterId","deleteWaterVolume","TodayListModal","handleEdit","data","updateWaterVolume","updatedData","TodayWaterList","todaysWaterList","note","waterIsLoading","waterIsError","waterNotes","Loading","snippets","MonthStatsTable","HomePage","userAuthLoading","userAuthError","fetchTodayWaterConsumption","fetchMonthlyWaterConsumption","containerClass","contentClass","toggleModal","setModalOpen","handleSave","addWaterVolume","srcSet","botleImage1x","botleImage2x","media","tabletImage1x","tabletImage2x","mobileImage2x","src","alt","WaterListWithCalendar"],"sourceRoot":""}